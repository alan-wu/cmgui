XCOMM **************************************************************************
XCOMM FILE : cmgui.imake
XCOMM
XCOMM LAST MODIFIED : 18 October 2000
XCOMM
XCOMM DESCRIPTION :
XCOMM
XCOMM Makefile for cmgui (the front end to CMISS)
XCOMM ???DB.  Separate make for xvg
XCOMM ???DB.  For VMS need to do  $define GL sys$library
XCOMM ???DB.  Get rid of PLATFORM_SWITCH altogether ?  Split UNIX into IRIX, AIX
XCOMM   and LINUX ?
XCOMM ???DB.  Should the parts shared with other applications (eg unemap.make)
XCOMM   be put in an include file ?
XCOMM ???DB.  UNIMA ?
XCOMM ???DB.  Error message for cm commands if not connected ?
XCOMM ???DB.  Move unemap/drawing_2d.* to graphics ?
XCOMM ???DB.  5 January 1998.  Tried lint (-wlint not yet implemented for
XCOMM   cc -n32), but gave lots of errors for Xlib.h
XCOMM ???DB.  6 January 1998.  multigot linker option allows multiple Global
XCOMM   Offset Tables
XCOMM ==========================================================================

/* The Makefile filename should match the filename into which this is being
	written.  This is done in the dependency rules in cmgui.make i.e.
	for sgi
		image -T cmgui.imake -f /dev/null -s cmgui.make
	for linux
		image -DLINUX -T cmgui.imake -f /dev/null -s cmgui_linux.make */

SHELL=/bin/sh

/* Perl interpreter is now std but I don't have it for O64 yet */
#define PERL_INTERPRETER

BIN_PATH=$(CMGUI_DEV_ROOT)/bin
SOURCE_PATH=$(CMGUI_DEV_ROOT)/source
UTILITIES_PATH=$(CMGUI_DEV_ROOT)/utilities
#if defined (CMISS_ROOT_DEFINED)
PRODUCT_PATH=$(CMISS_ROOT)/cmgui
#else /* defined (CMISS_ROOT_DEFINED) */
PRODUCT_PATH=$(CMGUI_DEV_ROOT)
#endif /* defined (CMISS_ROOT_DEFINED) */
PRODUCT_SOURCE_PATH=$(PRODUCT_PATH)/source
PRODUCT_UTILITIES_PATH=$(PRODUCT_PATH)/utilities
#if defined (OLD_CODE)
PRODUCT_PATH=/usr/people/bullivan/cmgui/uni_source
UTILITIES_PATH=/usr/people/bullivan/cmgui/cvs_unemap/utilities
#endif /* defined (OLD_CODE) */
#if defined (OLD_CODE)
PRODUCT_PATH=.
#endif /* defined (OLD_CODE) */

#if defined (IRIX) /* switch OperatingSystem */
#if ! defined (LITEWEIGHT)
#define MIRAGE
#define UNEMAP
#define XVG
/* ???DB.  Temporary.  Need xml libraries for other than n32 */
#if !defined(O64)
#define CELL
#endif /* !defined(O64) */
#endif /* ! defined (LITEWEIGHT) */

#define SharedObjectVersion 1.0

#if !defined (O64)
#define UidPath uid
#if defined (LITEWEIGHT)
#define Target cmgui_lite
#define SpacesToTabsTarget spaces_to_tabs
#define TabsToSpacesTarget tabs_to_spaces
#define Uid2uidhTarget uid2uidh
#define Makefile cmgui_sgilite.make
#define DependMake cmgui_sgilite.depend
#define ObjSuffix o
OBJECT_PATH=$(CMGUI_DEV_ROOT)/object/cmgui/n32_lite
PRODUCT_OBJECT_PATH=$(PRODUCT_PATH)/object/cmgui/n32_lite
UIDH_PATH=$(CMGUI_DEV_ROOT)/uidh/cmgui/n32
PRODUCT_UIDH_PATH=$(PRODUCT_PATH)/uidh/cmgui/n32
#else /* defined (LITEWEIGHT) */
#if !defined (OPTIMISED)
/* The normal debug and memory check versions keep the same extension
	as they only differ in one file */
#if !defined (MEMORY_CHECK)
#define Target cmgui
#define CmguiFiltLibrary libCmguiFilt.so
#define SpacesToTabsTarget spaces_to_tabs
#define TabsToSpacesTarget tabs_to_spaces
#define Uid2uidhTarget uid2uidh
#define Makefile cmgui_sgi.make
#define DependMake cmgui_sgi.depend
#define ObjSuffix o
OBJECT_PATH=$(CMGUI_DEV_ROOT)/object/cmgui/n32
PRODUCT_OBJECT_PATH=$(PRODUCT_PATH)/object/cmgui/n32
UIDH_PATH=$(CMGUI_DEV_ROOT)/uidh/cmgui/n32
PRODUCT_UIDH_PATH=$(PRODUCT_PATH)/uidh/cmgui/n32
#else /* !defined (MEMORY_CHECK) */
#define Target cmgui_memorycheck
#define SpacesToTabsTarget spaces_to_tabs
#define TabsToSpacesTarget tabs_to_spaces
#define Uid2uidhTarget uid2uidh
#define Makefile cmgui_sgi_memorycheck.make
#define DependMake cmgui_sgi_memorycheck.depend
#define ObjSuffix o
OBJECT_PATH=$(CMGUI_DEV_ROOT)/object/cmgui/n32
PRODUCT_OBJECT_PATH=$(PRODUCT_PATH)/object/cmgui/n32
UIDH_PATH=$(CMGUI_DEV_ROOT)/uidh/cmgui/n32
PRODUCT_UIDH_PATH=$(PRODUCT_PATH)/uidh/cmgui/n32
#endif /* !defined (MEMORY_CHECK) */
#else /* !defined (OPTIMISED) */
#define Target cmgui_optimised
#define SpacesToTabsTarget spaces_to_tabs
#define TabsToSpacesTarget tabs_to_spaces
#define Uid2uidhTarget uid2uidh
#define Makefile cmgui_sgioptimised.make
#define DependMake cmgui_sgioptimised.depend
#define ObjSuffix o
OBJECT_PATH=$(CMGUI_DEV_ROOT)/object/cmgui/n32_optimised
PRODUCT_OBJECT_PATH=$(PRODUCT_PATH)/object/cmgui/n32_optimised
UIDH_PATH=$(CMGUI_DEV_ROOT)/uidh/cmgui/n32
PRODUCT_UIDH_PATH=$(PRODUCT_PATH)/uidh/cmgui/n32
#endif /* !defined (OPTIMISED) */
#endif /* defined (LITEWEIGHT) */
#else /* !defined (O64) */
/* The O64 version can be either OPTIMISED or not but only one
	version is kept at the moment */
#define UidPath uidh
#define Target cmgui64
#define SpacesToTabsTarget spaces_to_tabs64
#define TabsToSpacesTarget tabs_to_spaces64
#define Uid2uidhTarget uid2uidh64
#define Makefile cmgui_sgi64.make
#define DependMake cmgui_sgi64.depend
#define ObjSuffix o
OBJECT_PATH=$(CMGUI_DEV_ROOT)/object/cmgui/64
PRODUCT_OBJECT_PATH=$(PRODUCT_PATH)/object/cmgui/64
UIDH_PATH=$(CMGUI_DEV_ROOT)/uidh/cmgui/64
PRODUCT_UIDH_PATH=$(PRODUCT_PATH)/uidh/cmgui/64
#endif /* !defined (O64) */

#elif defined (LINUX) /* switch OperatingSystem */
#define MIRAGE
#define UNEMAP
/* SAB Couldn't compile cell/cell_calculate.f 
   #define CELL */
#if defined (OPTIMISED)
#if defined (DYNAMIC_GL_LINUX)
#define Target cmgui_linux_optimised_dynamic
#define SpacesToTabsTarget spaces_to_tabs_linux
#define TabsToSpacesTarget tabs_to_spaces_linux
#define Uid2uidhTarget uid2uidh_linux
#define Makefile cmgui_linux_optimised_dynamic.make
#define DependMake cmgui_linux_optimised_dynamic.depend
#define ObjSuffix o
#else /* defined (DYNAMIC_GL_LINUX) */
#define Target cmgui_linux_optimised
#define SpacesToTabsTarget spaces_to_tabs_linux
#define TabsToSpacesTarget tabs_to_spaces_linux
#define Uid2uidhTarget uid2uidh_linux
#define Makefile cmgui_linux_optimised.make
#define DependMake cmgui_linux_optimised.depend
#define ObjSuffix o
#endif /* defined (DYNAMIC_GL_LINUX) */
/* Can't use linux on its own as this is defined! */
OBJECT_PATH=$(CMGUI_DEV_ROOT)/object/cmgui/linux_optimised
PRODUCT_OBJECT_PATH=$(PRODUCT_PATH)/object/cmgui/linux_optimised
UIDH_PATH=$(CMGUI_DEV_ROOT)/uidh/cmgui/linux_optimised
PRODUCT_UIDH_PATH=$(PRODUCT_PATH)/uidh/cmgui/linux_optimised
#else /* defined (OPTIMISED) */
#if defined (DYNAMIC_GL_LINUX)
#define Target cmgui_linux_dynamic
#define SpacesToTabsTarget spaces_to_tabs_linux
#define TabsToSpacesTarget tabs_to_spaces_linux
#define Uid2uidhTarget uid2uidh_linux
#define Makefile cmgui_linux_dynamic.make
#define DependMake cmgui_linux_dynamic.depend
#define ObjSuffix o
#else /* defined (DYNAMIC_GL_LINUX) */
#define Target cmgui_linux
#define SpacesToTabsTarget spaces_to_tabs_linux
#define TabsToSpacesTarget tabs_to_spaces_linux
#define Uid2uidhTarget uid2uidh_linux
#define Makefile cmgui_linux.make
#define DependMake cmgui_linux.depend
#define ObjSuffix o
#endif /* defined (DYNAMIC_GL_LINUX) */
/* Can't use linux on its own as this is defined! */
OBJECT_PATH=$(CMGUI_DEV_ROOT)/object/cmgui/linux_g
PRODUCT_OBJECT_PATH=$(PRODUCT_PATH)/object/cmgui/linux_g
UIDH_PATH=$(CMGUI_DEV_ROOT)/uidh/cmgui/linux_g
PRODUCT_UIDH_PATH=$(PRODUCT_PATH)/uidh/cmgui/linux_g
#endif /* defined (OPTIMISED) */
#endif /* switch OperatingSystem */

#if defined (CMISS_ROOT_DEFINED)
VPATH=$(BIN_PATH):$(UTILITIES_PATH):$(OBJECT_PATH):$(UIDH_PATH):$(PRODUCT_SOURCE_PATH):$(PRODUCT_OBJECT_PATH):$(PRODUCT_UIDH_PATH)
#else /* defined (CMISS_ROOT) */
VPATH=$(BIN_PATH):$(UTILITIES_PATH):$(OBJECT_PATH):$(UIDH_PATH)
#endif /* defined (CMISS_ROOT) */

/* Include all the common rules */
#include INCLUDE_IMAKEFILE

SOURCE_DIRECTORY_INC = -I$(SOURCE_PATH) -I$(PRODUCT_SOURCE_PATH)

#if defined (IRIX) /* switch OperatingSystem */
PLATFORM_SWITCH = -DSGI -Dmips -DCMGUI 
#elif defined(LINUX) /* switch OperatingSystem */
PLATFORM_SWITCH = -DGENERIC_PC -DCMGUI 
#endif /* switch OperatingSystem */

#if defined (OLD_CODE)
PLATFORM_SWITCH = -DIBM
PLATFORM_SWITCH = -DSGI
PLATFORM_SWITCH = -DVAX
PLATFORM_SWITCH = -DALPHA
#endif /* (OLD_CODE) */

OPERATING_SYSTEM = -DUNIX
#if defined (OLD_CODE)
OPERATING_SYSTEM = -DWIN32
???DB.  Win32 is an API not an operating system
OPERATING_SYSTEM = -DVMS
#endif /* (OLD_CODE) */

WINDOWING_SYSTEM = -DMOTIF
#if defined (OLD_CODE)
WINDOWING_SYSTEM = -DWINDOWS
#endif /* (OLD_CODE) */

#if defined (OLD_CODE)
 for GL
GRAPHICS_LIBRARY_SWITCH = -DGL_API
GRAPHICS_LIB = -lgl
#endif /* (OLD_CODE) */
#if defined (IRIX) /* switch OperatingSystem */
#if defined (O64)
XCOMM for OpenGL without SGI movie (64bit doesnt have libraries as of Jun2000)
GRAPHICS_LIBRARY_SWITCH = -DOPENGL_API
GRAPHICS_LIB = -lGL -lGLU
#else /* defined (O64) */
XCOMM  for OpenGL with SGI movie
GRAPHICS_LIBRARY_SWITCH = -DOPENGL_API -DSGI_MOVIE_FILE -DSGI_DIGITAL_MEDIA
GRAPHICS_LIB = -delay_load -lmoviefile -delay_load -ldmedia -lGL -lGLU
#endif /* defined (O64) */
#elif defined(LINUX) /* switch OperatingSystem */
GRAPHICS_LIBRARY_SWITCH = -DOPENGL_API
#if defined (DYNAMIC_GL_LINUX)
GRAPHICS_LIB = -lGLU -lGL
#else /* defined (DYNAMIC_GL_LINUX) */
GRAPHICS_LIB = -L/usr/local/lib -lMesaGL -lMesaGLU
#endif /* defined (DYNAMIC_GL_LINUX) */
#endif /* switch OperatingSystem */
#if defined (OLD_CODE)
XCOMM GRAPHICS_LIB = -delay_load -lmoviefile -delay_load -lmovieplay -lGL -lGLU -delay_load -ldmedia
XCOMM  for PEX
XCOMM GRAPHICS_LIBRARY_SWITCH = -DPEXLIB_API
XCOMM GRAPHICS_LIB = -lPEX5
#endif /* (OLD_CODE) */

XCOMM ???DB.  INSTALL_COLOURMAP seems to be needed for Mesa.  Mesa seems to have
XCOMM   trouble with some visuals
#if defined (IRIX) /* switch OperatingSystem */
THREE_D_DRAWING_DEFINES = 
#elif defined(LINUX) /* switch OperatingSystem */
THREE_D_DRAWING_DEFINES = -DINSTALL_COLOURMAP -DUSING_MESA
#endif /* switch OperatingSystem */

CONNECTIVITY_DEFINES = -DLINK_CMISS
#if defined (OLD_CODE)
XCOMM CONNECTIVITY_DEFINES =
#endif /* (OLD_CODE) */

#if !defined (FACE_APPLICATION)
FACE_APPLICATION_SWITCH =
#else /* !defined (FACE_APPLICATION) */
FACE_APPLICATION_SWITCH = -DFACE_APPLICATION
#endif /* !defined (FACE_APPLICATION) */

#if !defined (MIRAGE)
MIRAGE_SWITCH =
MIRAGE_SRCS =
#else /* !defined (MIRAGE) */
MIRAGE_SWITCH = -DMIRAGE
MIRAGE_SRCS = \
	mirage/digitiser_window.c \
	mirage/em_cmgui.c \
	mirage/mirage_node_editor.c \
	mirage/movie.c \
	mirage/movie_data.c \
	mirage/tracking_editor_dialog.c \
	slider/emoter_dialog.c
#endif /* !defined (MIRAGE) */

#if !defined (PERL_INTERPRETER)
INTERPRETER_INC =
INTERPRETER_SWITCH = 
INTERPRETER_SRCS =
INTERPRETER_LIB =
#else /* !defined (PERL_INTERPRETER) */
#if defined (CMISS_ROOT_DEFINED)
INTERPRETER_PATH = $(CMISS_ROOT)/perl_interpreter
#else /* defined (CMISS_ROOT_DEFINED) */
INTERPRETER_PATH = $(CMGUI_DEV_ROOT)/perl_interpreter
#endif /* defined (CMISS_ROOT_DEFINED) */
INTERPRETER_INC = -I$(INTERPRETER_PATH)/source/
INTERPRETER_SWITCH = -DPERL_INTERPRETER
INTERPRETER_SRCS =
#if defined (IRIX) /* switch OperatingSystem */
#if defined (O64)
INTERPRETER_LIB = $(INTERPRETER_PATH)/generated/mips4-64-debug/libperlinterpreter.a
#else /* defined (O64) */
#if defined (OPTIMISED)
INTERPRETER_LIB = $(INTERPRETER_PATH)/generated/mips4-n32-debug/libperlinterpreter.a
#else /* defined (OPTIMISED) */
INTERPRETER_LIB = $(INTERPRETER_PATH)/generated/mips3-n32-debug/libperlinterpreter.a
#endif /* defined (OPTIMISED) */
#endif /* defined (O64) */
#elif defined(LINUX) /* switch OperatingSystem */
INTERPRETER_LIB = $(INTERPRETER_PATH)/generated/linuxdebug/libperlinterpreter.a
#endif /* switch OperatingSystem */
#endif /* !defined (PERL_INTERPRETER) */

#if !defined (ROBO_APPLICATION)
ROBO_APPLICATION_SWITCH =
ROBO_APPLICATION_SRCS =
#else /* !defined (ROBO_APPLICATION) */
ROBO_APPLICATION_SWITCH = -DROBO_APPLICATION
ROBO_APPLICATION_SRCS = graphics/robo_window.c
#endif /* !defined (ROBO_APPLICATION) */

#if !defined (UNEMAP)
UNEMAP_SWITCH =
UNEMAP_SRCS = \
	unemap/drawing_2d.c
#else /* !defined (UNEMAP) */
#if defined (OLD_CODE)
XCOMM for all nodal stuff UNEMAP_SWITCH = -DUNEMAP -DSPECTRAL_TOOLS -DUNEMAP_USE_NODES 
#endif
UNEMAP_SWITCH = -DUNEMAP -DSPECTRAL_TOOLS -DUNEMAP_USE_3D 
UNEMAP_SRCS = \
	unemap/acquisition.c \
	unemap/acquisition_window.c \
	unemap/acquisition_work_area.c \
	unemap/analysis.c \
	unemap/analysis_window.c \
	unemap/analysis_work_area.c \
	unemap/bard.c \
	unemap/beekeeper.c \
	unemap/cardiomapp.c \
	unemap/drawing_2d.c \
	unemap/interpolate.c \
	unemap/map_dialog.c \
	unemap/mapping.c \
	unemap/mapping_window.c \
	unemap/neurosoft.c \
	unemap/page_window.c \
	unemap/rig.c \
	unemap/rig_node.c \
	unemap/setup_dialog.c \
	unemap/spectral_methods.c \
	unemap/system_window.c \
	unemap/trace_window.c \
	unemap/unemap_hardware_client.c \
	unemap/unemap_package.c 
#endif /* !defined (UNEMAP) */

#if !defined (XVG)
XVG_SWITCH =
XVG_OPTION_DEFINES = 
XVG_INC = -I$(PRODUCT_SOURCE_PATH)/xvg/include
XVG_SRCS =
#else /* !defined (XVG) */
XVG_SWITCH = -DINCLUDE_XVG
XVG_OPTION_DEFINES = -DXT_CODE -DUIL_CODE -DNO_XVGMAIN
#if defined (OLD_CODE)
XCOMM XVG_OPTION_DEFINES = -DXT_CODE -D_XOPEN_SOURCE -D_ANSI_C_SOURCE \
	-DUIL_CODE -DCMGUI -DNO_XVGMAIN
#endif /* defined (OLD_CODE) */
XVG_INC = -I$(SOURCE_PATH)/xvg/include -I$(SOURCE_PATH)/xvg/cmgui -I$(SOURCE_PATH)/xvg -I$(PRODUCT_SOURCE_PATH)/xvg/include -I$(PRODUCT_SOURCE_PATH)/xvg/cmgui -I$(PRODUCT_SOURCE_PATH)/xvg
/* SAB This hack is to escape the replacement of sgi
	but not affect its definition, if anyone knows a better way
   to stop the token replacement, be my guest */
#if defined (sgi)
#define KeepSgiDef sgi
#undef sgi
#endif /* defined (sgi) */
XVG_SRCS = \
	xvg/cmgui/GLShell.c \
	xvg/cmgui/HistogramShell.c \
	xvg/cmgui/IPOperationsShell.c \
	xvg/cmgui/InfoDialog.c \
	xvg/cmgui/InputDialog.c \
	xvg/cmgui/LUTShell.c \
	xvg/cmgui/MovieControlsShell.c \
	xvg/cmgui/ProcessedImageShell.c \
	xvg/cmgui/RawImageShell.c \
	xvg/cmgui/ScrolledWindowDialog.c \
	xvg/cmgui/XvgShell.c \
	xvg/cmgui/fileSelectionBoxDialog.c \
	xvg/cmgui/promptDialog.c \
	xvg/cmgui/xvg.c \
	xvg/custom/GLUtils.c \
	xvg/custom/NRC_SVD.c \
	xvg/custom/SGIGrabIPOPs.c \
	xvg/custom/UxDummies.c \
	xvg/custom/UxMethod.c \
	xvg/custom/UxXt.c \
	xvg/custom/XWDUtils.c \
	xvg/custom/XvgMemoryManager.c \
	xvg/custom/XvgRegisterIPOps.c \
	xvg/custom/XvgSystem.c \
	xvg/custom/binaryIPOPs.c \
	xvg/custom/e04uef_calls.c \
	xvg/custom/feIPOPs.c \
	xvg/custom/fftIPOPs.c \
	xvg/custom/fileIPOPs.c \
	xvg/custom/fileio.c \
	xvg/custom/fitIPOPs.c \
	xvg/custom/grab.c \
	xvg/custom/grabIPOPs.c \
	xvg/custom/imgproc.c \
	xvg/custom/matlab.c \
	xvg/custom/morphoIPOPs.c \
	xvg/custom/sgi.c \
	xvg/custom/spacedomIPOPs.c \
	xvg/custom/stereoIPOPs.c \
	xvg/custom/unima.c \
	xvg/custom/utils.c \
	xvg/custom/wrappingIPOPs.c
#if defined (KeepSgiDef)
#define sgi KeepSgiDef
#endif /* defined (KeepSgiDef) */
#endif /* !defined (XVG) */

#if !defined (CELL)
CELL_SWITCH =
CELL_SRCS =
#else /* !defined (CELL) */
CELL_SWITCH = -DCELL -DCELL_CONTROL_CURVE
CELL_SRCS = \
	cell/calculate.c \
	cell/cell_3d.c \
	cell/cell_component.c \
	cell/cell_parameter.c \
	cell/cell_control_curve.c \
	cell/cell_variable.c \
	cell/cell_window.c \
	cell/cmgui_connection.c \
	cell/input.c \
	cell/messages.c \
	cell/model_dialog.c \
	cell/parameter_dialog.c \
	cell/output.c \
	cell/parser.c \
	cell/variables_dialog.c
#endif /* !defined (CELL) */

UIDH_INC = -I$(UIDH_PATH) -I$(PRODUCT_UIDH_PATH)

#if defined (IRIX) /* switch OperatingSystem */
EXTERNAL_INPUT_DEFINES = -DDIALS -DSPACEBALL -DPOLHEMUS -DFARO -DEXT_INPUT 
EXTERNAL_INPUT_LIB = -lXext -lXi
#elif defined(LINUX) /* switch OperatingSystem */
EXTERNAL_INPUT_DEFINES = 
EXTERNAL_INPUT_LIB = 
#endif /* switch OperatingSystem */
#if defined (OLD_CODE)
EXTERNAL_INPUT_DEFINES = -DSPACEBALL -DEXT_INPUT 
EXTERNAL_INPUT_LIB = 
EXTERNAL_INPUT_DEFINES = -DDIALS -DSPACEBALL -DPOLHEMUS -DEXT_INPUT -DHAPTIC
EXTERNAL_INPUT_LIB = -lXext -lXi
#endif /* defined (OLD_CODE) */

HAPTIC_LIB =
HAPTIC_INC =
#if defined (OLD_CODE)
HAPTIC_LIB = -L/usr/local/phantom/GHOST/lib -lghost_n32Mips3
HAPTIC_INC = -I/usr/local/phantom/GHOST/lib
HAPTIC_LIB = -L/usr/local/phantom/GHOST/lib -lghost_o32
HAPTIC_INC = -I/usr/local/phantom/GHOST/lib
#endif /* defined (OLD_CODE) */

#if defined (OLD_CODE)
WORMHOLE_LIB = product_1:[product.cmiss.wormhole.lib]wormhole/lib
WORMHOLE_INC = -Iproduct_1:[product.cmiss.wormhole.source]
WORMHOLE_LIB = -L/usr/people/bullivan/wormhole/lib -lwormhole_n32
WORMHOLE_INC = -I/usr/people/bullivan/wormhole/source
WORMHOLE_LIB = -L/usr/people/bullivan/wormhole/lib -lwormhole
WORMHOLE_INC = -I/usr/people/bullivan/wormhole/source
#endif /* defined (OLD_CODE) */
#if defined (CMISS_ROOT_DEFINED)
WORMHOLE_PATH=$(CMISS_ROOT)/wormhole
#else /* defined (CMISS_ROOT_DEFINED) */
WORMHOLE_PATH=$(CMGUI_DEV_ROOT)/wormhole
#endif /* defined (CMISS_ROOT_DEFINED) */
#if defined (IRIX) /* switch OperatingSystem */
#if defined (O64)
WORMHOLE_LIB = -L${WORMHOLE_PATH}/lib -lwormhole_64
WORMHOLE_INC = -I${WORMHOLE_PATH}/source
#else /* defined (O64) */
WORMHOLE_LIB = -L${WORMHOLE_PATH}/lib -lwormhole_n32
WORMHOLE_INC = -I${WORMHOLE_PATH}/source
#endif /* defined (O64) */
#elif defined(LINUX) /* switch OperatingSystem */
WORMHOLE_LIB = -L${WORMHOLE_PATH}/lib -lwormhole_linux
WORMHOLE_INC = -I${WORMHOLE_PATH}/source
#endif /* switch OperatingSystem */

#if defined (CMISS_ROOT_DEFINED)
XML_PATH=$(CMISS_ROOT)/xml
#else /* defined (CMISS_ROOT_DEFINED) */
XML_PATH=$(CMGUI_DEV_ROOT)/xml
#endif /* defined (CMISS_ROOT_DEFINED) */
#if defined (CELL)
#if defined (IRIX) /* switch OperatingSystem */
#if defined (O64)
XML_LIB = -L$(XML_PATH)/expat_lib/lib -lExpat_64
XML_INC = -I$(XML_PATH)/expat_lib/include
#else /* defined (O64) */
XML_LIB = -B static -L$(XML_PATH)/expat_lib/lib -lExpat_n32 -B dynamic
XML_INC = -I$(XML_PATH)/expat_lib/include
#endif /* defined (O64) */
#elif defined(LINUX) /* switch OperatingSystem */
XML_LIB = -static -L$(XML_PATH)/expat_lib/lib -lExpat_linux -shared
XML_INC = -I(XML_PATH)/expat_lib/include
#endif /* switch OperatingSystem */
#endif /* defined (CELL) */

#if defined (OLD_CODE)
SOCKET_DEFINES = -Dsgi -Dmips
SOCKET_LIB = -L/usr/local/lib/sklib -lsk
SOCKET_INC = -I${CMISS_ROOT}/sklib
SOCKET_DEFINES = -Dsgi -Dmips
SOCKET_LIB = -L${CMISS_ROOT}/sklib -lsk
SOCKET_INC = -I${CMISS_ROOT}/sklib
SOCKET_DEFINES = -Dlinux -Dintel
SOCKET_LIB = -L/home/bullivan/sklib -lsk
SOCKET_INC = -I/home/bullivan/sklib
SOCKET_DEFINES = -Dsgi -Dmips
SOCKET_LIB = -L/usr/people/bullivan/sklib -lsk
SOCKET_INC = -I/usr/people/bullivan/sklib
SOCKET_DEFINES = -D"alpha=alpha" -D"vms"
SOCKET_INC = -Iproduct_1:[product.cmiss.sklib]
SOCKET_LIB = product_1:[product.cmiss.sklib]sklib/lib, sys$library:ucx$ipc/lib
SOCKET_DEFINES = -DDO_NOT_USE_SOCKETS
SOCKET_LIB = -L/u/bullivan/cmiss/sklib -lsk
SOCKET_INC = -I/u/bullivan/cmiss/sklib
SOCKET_DEFINES = -DDO_NOT_USE_SOCKETS
SOCKET_LIB = -L/data/bullivan/cmiss/sklib -lsk
SOCKET_INC = -I/data/bullivan/cmiss/sklib
#endif /* defined (OLD_CODE) */


STEREO_DISPLAY_SWITCH = -DSTEREO
#if defined (OLD_CODE)
STEREO_DISPLAY_SWITCH =
#endif /* defined (OLD_CODE) */


#if defined (OLD_CODE)
POSTSCRIPT_DEFINES = -DFEEDBACK_POSTSCRIPT
#endif /* defined (OLD_CODE) */
POSTSCRIPT_DEFINES =

#if defined (OLD_CODE)
XCOMM  By default some names are "mangled" to get external names <= 32 characters
NAME_DEFINES =
#endif /* defined (OLD_CODE) */
NAME_DEFINES = -DFULL_NAMES

XCOMM  Temporary flags that are used during development
TEMPORARY_DEVELOPMENT_FLAGS =
#if defined (OLD_CODE)
TEMPORARY_DEVELOPMENT_FLAGS = -DINTERNAL_UIDS -DPHANTOM_FARO
TEMPORARY_DEVELOPMENT_FLAGS = -DINTERPOLATE_TEXELS -DOTHER_FIBRE_DIR -DREPORT_GL_ERRORS
TEMPORARY_DEVELOPMENT_FLAGS = -DDO_NOT_ADD_DETAIL
TEMPORARY_DEVELOPMENT_FLAGS = -DSELECT_ELEMENTS -DMERGE_TIMES -DPETURB_LINES -DDEPTH_OF_FIELD -DDO_NOT_ADD_DETAIL -DSGI_MOVIE_FILE
TEMPORARY_DEVELOPMENT_FLAGS = -DSELECT_ELEMENTS -DMERGE_TIMES -DPETURB_LINES -DDEPTH_OF_FIELD -DBLEND_NODAL_VALUES -DNEW_SPECTRUM
TEMPORARY_DEVELOPMENT_FLAGS = -DSELECT_ELEMENTS -DMERGE_TIMES -DPETURB_LINES -DDEPTH_OF_FIELD -DDO_NOT_ADD_DETAIL -DBLEND_NODAL_VALUES -DALLOW_MORPH_UNEQUAL_POINTSETS
TEMPORARY_DEVELOPMENT_FLAGS = -DWINDOWS_DEV_FLAG
#endif /* defined (OLD_CODE) */

#if defined (OLD_CODE)
XCOMM ???DB.  Video needs tidying.  There are flags SGI_VIDEO, IBM_VIDEO, IBM_VCA
XCOMM   (also used in relation to how the animation is done) and SVIDEO
VIDEO_SWITCH = -DIBM_VCA
VIDEO_LIB = /usr/lpp/bos/samples/vca/lib/libvca.a
VIDEO_SRCS = graphics/smtv.c graphics/vca.c
VIDEO_SWITCH = -DSVIDEO
VIDEO_LIB = -lsvideo 
#endif /* defined (OLD_CODE) */
VIDEO_SWITCH =
VIDEO_LIB =
VIDEO_SRCS =

#if defined (OLD_CODE)
NAG_LIB = -lnag
NAG_LIB = /usr/local/libnag.a
NAG_LIB =
#endif /* defined (OLD_CODE) */
NAG_SRCS = xvg/custom/nag.c
NAG_LIB =

HELP_DEFINES = -DNETSCAPE_HELP
HELP_INCLUDE =
HELP_LIB =
HELP_SRCS = \
	help/help_interface.c

#if defined (OLD_CODE)
CFLAGS = /float=ieee /standard=ansi89
CFLAGS =
CFLAGS = -ansi -pedantic -fullwarn -woff 841 -wlint,-faivu
#if defined (IRIX) /* switch OperatingSystem */
CFLAGS = -ansi -pedantic -woff 1521
#elif defined(LINUX) /* switch OperatingSystem */
CFLAGS =
#endif /* switch OperatingSystem */
#endif /* defined (OLD_CODE) */

#if defined (OLD_CODE)
LIB = -lMrm -lXm -lXt -lX11 -lXmu -lPW -lm -lmalloc_cv
LIB = -lMrm -lXm -lXt -lX11 -lXmu -lPW -lm
LIB = -lMrm -lXm -lXt -lX11 -lXmu -lPW -lftn -lm
#endif /* defined (OLD_CODE) */
#if defined (IRIX) /* switch OperatingSystem */
LIB = -lMrm -lSgm -lXm -lXt -lX11 -lXmu -lPW -lftn -lm -lpthread 
#elif defined(LINUX) /* switch OperatingSystem */
#if defined (DYNAMIC_GL_LINUX)
X_LIB = /usr/X11R6/lib
LIB = $(X_LIB)/libMrm.a $(X_LIB)/libXm.a $(X_LIB)/libXt.a $(X_LIB)/libX11.a $(X_LIB)/libXmu.a $(X_LIB)/libXpm.a -lXext $(X_LIB)/libXp.a $(X_LIB)/libSM.a $(X_LIB)/libICE.a -lm -ldl -lc /usr/lib/libpthread.a /usr/lib/libcrypt.a
#else /* defined (DYNAMIC_GL_LINUX) */
LIB = -lMrm -lXm -lXt -lX11 -lXmu -lXpm -lXext -lg2c -lm -ldl -lXp -lSM -lICE -lpthread -lcrypt
#endif /* defined (DYNAMIC_GL_LINUX) */
#endif /* switch OperatingSystem */

START_ALL_DEFINES =
END_ALL_DEFINES =

START_ALL_INCLUDES =
END_ALL_INCLUDES =

ALL_DEFINES = $(START_ALL_DEFINES) \
	$(COMPILE_DEFINES) $(TARGET_TYPE_DEFINES) \
	$(PLATFORM_SWITCH) $(OPERATING_SYSTEM) $(WINDOWING_SYSTEM) \
	$(STEREO_DISPLAY_SWITCH) $(CONNECTIVITY_DEFINES) \
	$(EXTERNAL_INPUT_DEFINES) $(XVG_SWITCH) $(XVG_OPTION_DEFINES) \
	$(ROBO_APPLICATION_SWITCH) $(FACE_APPLICATION_SWITCH) \
	$(GRAPHICS_LIBRARY_SWITCH) $(VIDEO_SWITCH) $(HELP_DEFINES) \
	$(POSTSCRIPT_DEFINES) $(NAME_DEFINES) $(TEMPORARY_DEVELOPMENT_FLAGS) \
	$(THREE_D_DRAWING_DEFINES) $(UNEMAP_SWITCH) $(MIRAGE_SWITCH) \
	$(CELL_SWITCH) $(MOVIE_FILE_SWITCH) $(INTERPRETER_SWITCH)\
	$(END_ALL_DEFINES)

ALL_INCLUDES = $(START_ALL_INCLUDES) \
	$(SOURCE_DIRECTORY_INC) $(HAPTIC_INC) $(XVG_INC) $(WORMHOLE_INC) $(XML_INC) \
	$(UIDH_INC) $(INTERPRETER_INC) $(END_ALL_INCLUDES)

ALL_FLAGS = $(OPTIMISATION_FLAGS) $(COMPILE_FLAGS) $(TARGET_TYPE_FLAGS) \
	$(ALL_DEFINES) $(ALL_INCLUDES)

ALL_LIB = $(GRAPHICS_LIB) $(HAPTIC_LIB) $(WORMHOLE_LIB) $(INTERPRETER_LIB) \
		$(LIB) $(VIDEO_LIB) $(EXTERNAL_INPUT_LIB) $(NAG_LIB) $(HELP_LIB) \
	  $(MOVIE_FILE_LIB) $(XML_LIB)
   

APPLICATION_SRCS = \
	application/application.c 
CHOOSE_SRCS = \
	choose/choose_computed_field.c \
	choose/choose_control_curve.c \
	choose/choose_element_group.c \
	choose/choose_enumerator.c \
	choose/choose_fe_field.c \
	choose/choose_field_component.c \
	choose/choose_node_group.c \
	choose/choose_graphical_material.c \
	choose/choose_gt_object.c \
	choose/choose_scene.c \
	choose/choose_spectrum.c \
	choose/choose_texture.c \
	choose/choose_volume_texture.c \
	choose/chooser.c \
	choose/text_choose_fe_element.c \
	choose/text_choose_fe_node.c
COLOUR_SRCS = \
	colour/colour_editor.c \
	colour/edit_var.c 
COMFILE_SRCS = \
	comfile/comfile_window.c 
COMMAND_SRCS = \
	command/cmiss.c \
	command/command.c \
	command/command_window.c \
	command/example_path.c \
	command/parser.c 
COMPUTED_FIELD_SRCS = \
	computed_field/computed_field.c \
	computed_field/computed_field_component_operations.c \
	computed_field/computed_field_composite.c \
	computed_field/computed_field_coordinate.c \
	computed_field/computed_field_deformation.c \
	computed_field/computed_field_derivatives.c \
	computed_field/computed_field_fibres.c \
	computed_field/computed_field_find_xi.c \
	computed_field/computed_field_finite_element.c \
	computed_field/computed_field_integration.c \
	computed_field/computed_field_matrix_operations.c \
	computed_field/computed_field_sample_texture.c \
	computed_field/computed_field_vector_operations.c \
	computed_field/computed_field_window_projection.c \
	computed_field/computed_field_wrappers.c
CURVE_SRCS = \
	curve/control_curve.c \
	curve/control_curve_editor.c \
	curve/control_curve_editor_dialog.c
DATA_SRCS = \
	data/data_2d.c \
	data/data_2d_dialog.c \
	data/data_grabber.c \
	data/data_grabber_dialog.c \
	data/node_transform.c \
	data/sync_2d_3d.c
DOF3_SRCS = \
	dof3/dof3.c \
	dof3/dof3_control.c \
	dof3/dof3_input.c 
ELEMENT_SRCS = \
	element/element_creator.c \
	element/element_point_field_viewer_widget.c \
	element/element_point_viewer.c \
	element/element_point_viewer_widget.c \
	element/element_point_tool.c \
	element/element_tool.c
FINITE_ELEMENT_SRCS = \
	finite_element/export_finite_element.c \
	finite_element/field_value_index_ranges.c \
	finite_element/finite_element.c \
	finite_element/finite_element_adjacent_elements.c \
	finite_element/finite_element_to_graphics_object.c \
	finite_element/finite_element_to_iso_lines.c \
	finite_element/finite_element_to_streamlines.c \
	finite_element/grid_field_calculator.c \
	finite_element/import_finite_element.c
GENERAL_SRCS = \
	general/any_object.c \
	general/callback.c \
	general/child_process.c \
	general/compare.c \
	general/debug.c \
	general/error_handler.c \
	general/geometry.c \
	general/heapsort.c \
	general/indexed_multi_range.c \
	general/image_utilities.c \
	general/machine.c \
	general/matrix_vector.c \
	general/multi_range.c \
	general/myio.c \
	general/mystring.c \
	general/photogrammetry.c \
	general/postscript.c \
	general/value.c 
GRAPHICS_SRCS = \
	graphics/animation_window.c \
	graphics/auxiliary_graphics_types.c \
	graphics/colour.c \
	graphics/complex.c \
	graphics/element_group_settings.c \
	graphics/element_point_ranges.c \
	graphics/environment_map.c \
	graphics/face_window.c \
	graphics/glyph.c \
	graphics/graphical_element.c \
	graphics/graphical_element_editor.c \
	graphics/graphical_element_editor_dialog.c \
	graphics/graphics_library.c \
	graphics/graphics_object.c \
	graphics/graphics_window.c \
	graphics/import_graphics_object.c \
	graphics/interactive_streamlines_dialog.c \
	graphics/iso_field_calculation.c \
	graphics/laguer.c \
	graphics/light.c \
	graphics/light_model.c \
	graphics/material.c \
	graphics/makegtobj.c \
	graphics/mcubes.c \
	graphics/movie_graphics.c \
	graphics/nrutil.c \
	graphics/renderbinarywavefront.c \
	graphics/rendergl.c \
	graphics/rendervrml.c \
	graphics/renderwavefront.c \
	graphics/scene.c \
	graphics/scene_viewer.c \
	graphics/selected_graphic.c \
	graphics/settings_editor.c \
	graphics/spectrum.c \
	graphics/spectrum_editor.c \
	graphics/spectrum_editor_dialog.c \
	graphics/spectrum_editor_settings.c \
	graphics/spectrum_settings.c \
	graphics/splines.c \
	graphics/texture.c \
	graphics/texture_graphics.c \
	graphics/texture_line.c \
	graphics/texturemap.c \
	graphics/transform_tool.c \
	graphics/userdef_objects.c \
	graphics/volume_texture.c \
	graphics/volume_texture_editor.c \
	graphics/volume_texture_editor_dialog.c \
	graphics/write_to_video.c 
INTERACTION_SRCS = \
	interaction/interaction_graphics.c \
	interaction/interaction_volume.c \
	interaction/interactive_tool.c \
	interaction/interactive_toolbar_widget.c \
	interaction/interactive_event.c \
	interaction/select_tool.c
IO_DEVICES_SRCS = \
	io_devices/conversion.c \
	io_devices/haptic_input_module.cpp \
	io_devices/input_module.c \
	io_devices/input_module_dialog.c \
	io_devices/input_module_widget.c \
	io_devices/matrix.c 
LINK_SRCS = \
	link/cmiss.c
MATERIAL_SRCS = \
	material/material_editor.c \
	material/material_editor_dialog.c
MENU_SRCS = \
	menu/menu_window.c
NODE_SRCS = \
	node/interactive_node_editor.c \
	node/interactive_node_editor_dialog.c \
	node/node_field_viewer_widget.c \
	node/node_tool.c \
	node/node_viewer.c \
	node/node_viewer_widget.c
PROJECTION_SRCS = \
	projection/projection.c \
	projection/projection_dialog.c \
	projection/projection_window.c
PROMPT_SRCS = \
	prompt/prompt_window.c 
SELECT_SRCS = \
	select/select_control_curve.c \
	select/select_environment_map.c \
	select/select_finite_element.c \
	select/select_graphical_material.c \
	select/select_interactive_streamline.c \
	select/select_private.c \
	select/select_spectrum.c
SELECTION_SRCS = \
	selection/any_object_selection.c \
	selection/element_point_ranges_selection.c \
	selection/element_selection.c \
	selection/node_selection.c
SLIDER_SRCS = \
	slider/node_group_slider_dialog.c
THREE_D_DRAWING_SRCS = \
	three_d_drawing/dm_interface.c \
	three_d_drawing/movie_extensions.c \
	three_d_drawing/ThreeDDraw.c
TRANSFORMATION_SRCS = \
	transformation/transformation_editor.c \
	transformation/transformation_editor_dialog.c 
TIME_SRCS = \
	time/time.c \
	time/time_keeper.c \
	time/time_editor.c \
	time/time_editor_dialog.c
USER_INTERFACE_SRCS = \
	user_interface/confirmation.c \
	user_interface/filedir.c \
	user_interface/message.c \
	user_interface/printer.c \
	user_interface/user_interface.c
VIEW_SRCS = \
	view/camera.c \
	view/coord.c \
	view/coord_trans.c \
	view/poi.c \
	view/vector.c \
	view/view.c \
	view/view_control.c 

XCOMM DB.  makedepend has problems if too many files
SRCS_1 = \
	$(APPLICATION_SRCS) \
	$(CELL_SRCS) \
	$(CHOOSE_SRCS) \
	$(COLOUR_SRCS) \
	$(COMFILE_SRCS) \
	$(COMMAND_SRCS) \
	$(COMPUTED_FIELD_SRCS) \
	$(CURVE_SRCS) \
	$(DATA_SRCS) \
	$(DOF3_SRCS) \
	$(ELEMENT_SRCS) \
	$(FINITE_ELEMENT_SRCS) \
	$(GENERAL_SRCS) \
	$(GRAPHICS_SRCS) \
	$(HELP_SRCS) \
	$(INTERACTION_SRCS) \
	$(IO_DEVICES_SRCS) \
	$(LINK_SRCS) \
	$(MATERIAL_SRCS) \
	$(MENU_SRCS) \
	$(MIRAGE_SRCS) \
	$(NAG_SRCS) \
	$(NODE_SRCS) \
	$(PROJECTION_SRCS) \
	$(PROMPT_SRCS) \
	$(SELECT_SRCS) \
	$(SELECTION_SRCS) \
	$(SLIDER_SRCS) \
	$(THREE_D_DRAWING_SRCS)

SRCS_2 = \
	$(INTERPRETER_SRCS) \
	$(TIME_SRCS) \
	$(TRANSFORMATION_SRCS) \
	$(USER_INTERFACE_SRCS) \
	$(XVG_SRCS) \
	$(VIDEO_SRCS) \
	$(UNEMAP_SRCS) \
	$(VIEW_SRCS)

SRCS = $(SRCS_1) $(SRCS_2)

#if defined (MEMORY_CHECK)
OBJSA = $(SRCS:.c=.ObjSuffix)
OBJSB = $(OBJSA:.cpp=.ObjSuffix)
	  /* Override the one changed file in the source list */
OBJSC = $(OBJSB:general/debug.ObjSuffix=general/debug_memory_check.ObjSuffix)
OBJS = $(OBJSC:.f=.ObjSuffix)
#else /* defined (MEMORY_CHECK) */
OBJSA = $(SRCS:.c=.ObjSuffix)
OBJSB = $(OBJSA:.cpp=.ObjSuffix)
OBJS = $(OBJSB:.f=.ObjSuffix)
#endif /* defined (MEMORY_CHECK) */

/* Stuff for the filt dynamic shared object library */
LIB_FILT_SRCS = \
	command/parser.c \
   filt/exnodecmgui.c \
   finite_element/export_finite_element.c \
	finite_element/finite_element.c \
	finite_element/import_finite_element.c \
	general/compare.c \
	general/debug.c \
   general/geometry.c \
   general/heapsort.c \
	general/matrix_vector.c \
	general/mystring.c \
	general/value.c \
   user_interface/message.c

#if defined (MEMORY_CHECK)
LIB_FILT_OBJSA = $(LIB_FILT_SRCS:.c=.ObjSuffix)
LIB_FILT_OBJSB = $(LIB_FILT_OBJSA:.cpp=.ObjSuffix)
	  /* Override the one changed file in the source list */
LIB_FILT_OBJSC = $(LIB_FILT_OBJSB:general/debug.ObjSuffix=general/debug_memory_check.ObjSuffix)
LIB_FILT_OBJS = $(LIB_FILT_OBJSC:.f=.ObjSuffix)
#else /* defined (MEMORY_CHECK) */
LIB_FILT_OBJSA = $(LIB_FILT_SRCS:.c=.ObjSuffix)
LIB_FILT_OBJSB = $(LIB_FILT_OBJSA:.cpp=.ObjSuffix)
LIB_FILT_OBJS = $(LIB_FILT_OBJSB:.f=.ObjSuffix)
#endif /* defined (MEMORY_CHECK) */

depend :
	echo -n > DependMake
	(makedepend -f DependMake -o.ObjSuffix -Y -- $(ALL_FLAGS) -- cmgui.c 2> DependMake.tmp)
	(makedepend -f DependMake -o.ObjSuffix -Y -a -- $(ALL_FLAGS) -- $(SRCS_1) 2>> DependMake.tmp)
	(makedepend -f DependMake -o.ObjSuffix -Y -a -- $(ALL_FLAGS) -- $(SRCS_2) 2>> DependMake.tmp)
	(makedepend -f DependMake -o.ObjSuffix -Y -a -- $(ALL_FLAGS) -- filt/exnodecmgui.c 2>> DependMake.tmp)
	/* The uidh get their full path in the dependencies which stops the VPATH
	.uil.uidh rule from picking up dependencies so I remove this PATH */
	sed "s%$(UIDH_PATH)/%%g" DependMake > DependMake.tmp2
	mv DependMake.tmp2 DependMake
#if defined (IRIX) /* switch OperatingSystem */
	(ls $(SRCS) 2>&1 | sed "s%Cannot access %%;s%: No such file or directory%%;s%.*%&: &%;s%\.[^.]*:%.o:%;s%UX:ls: ERROR: %%" >> DependMake)
#elif defined(LINUX) /* switch OperatingSystem */
	(ls $(SRCS) 2>&1 | sed "s%ls: %%;s%: No such file or directory%%;s%.*%&: &%;s%\.[^.]*:%.o:%" >> DependMake)
#endif /* switch OperatingSystem */
	/* Try and make a rule for the uidhs if they don't exist already,
	It is bad, based on the format of the error output from makedepend and it only
	gets the first inclusion.  If it fails then you can get the correct makedepend 
	by ensuring all the uidh files already exist before you makedepend */
	( grep uidh DependMake.tmp | grep makedepend | awk -v Obj=ObjSuffix -F "[ ,]" '{printf("%s.%s:",substr($$4, 1, length($$4) - 2),Obj); for(i = 1 ; i <= NF ; i++)  { if (match($$i,"uidh")) printf(" %s", substr($$i, 2, length($$i) -2)) } printf("\n");}' >> DependMake)
	rm DependMake.tmp

transfer :
	tar -cvf - \
	../WildMake readme.* *.make *.imake *.c version.ObjSuffix.h Cmgui \
	*.mms *.sed *.com *.opt *.ico \
	application/WildC application/WildH application/WildUil \
	choose/WildC choose/WildH choose/WildUil \
	colour/WildC colour/WildH colour/WildUil \
	comfile/WildC comfile/WildH comfile/WildRc comfile/WildUil \
	computed_field/WildC computed_field/WildH computed_field/WildRc computed_field/WildUil \
	curve/WildC curve/WildH curve/WildUil \
	data/WildC data/WildH data/WildUil \
	database/WildC database/WildH database/WildUil \
	dof3/WildC dof3/WildH dof3/WildUil \
	element/WildC element/WildH element/WildUil \
	general/WildC general/WildH general/WildUil \
	help/WildC help/WildH help/WildUil \
	interaction/WildC interaction/WildCpp interaction/WildH interaction/WildUil \
	io_devices/WildC io_devices/WildCpp io_devices/WildH io_devices/WildUil \
	link/WildC link/WildH link/WildUil \
	material/WildC material/WildH material/WildUil \
	menu/WildC menu/WildH menu/WildUil \
	mirage/WildC mirage/WildH mirage/WildUil \
	node/WildC node/WildH node/WildUil \
	projection/WildC projection/WildH projection/WildUil \
	prompt/WildC prompt/WildH prompt/WildUil \
	select/WildC select/WildH select/WildUil \
	selection/WildC selection/WildH selection/WildUil \
	slider/WildC slider/WildH slider/WildUil \
	three_d_drawing/Makefile three_d_drawing/WildC three_d_drawing/WildH \
	time/WildC time/WildH time/WildUil \
	transformation/WildC transformation/WildH transformation/WildUil \
	unemap/drawing_2d.c unemap/drawing_2d.h \
	user_interface/WildC user_interface/WildH user_interface/WildUil \
	utilities/WildC utilities/WildH utilities/WildUil \
	view/WildC view/WildH view/WildUil \
	| gzip > cmgui_tar1.gz
	tar -cvf - \
	cell/WildC cell/WildCmn cell/WildF cell/WildH cell/WildUil cell/bitmaps/WildXbm \
	hypertext_help/WildC hypertext_help/WildH hypertext_help/Makefile \
	hypertext_help/WildMms \
	unemap/WildC unemap/WildH unemap/WildUil unemap/WildRc \
	unemap/utilities/Makefile unemap/utilities/WildC unemap/utilities/WildH  \
	unemap/utilities/WildUil unemap/utilities/WildRc \
	unemap/default_torso/WildEx \
	unemap_hardware_service/WildC unemap_hardware_service/WildH \
	unemap_hardware_service/WildUil unemap_hardware_service/WildRc \
	xvg/README xvg/custom/WildC xvg/custom/WildF xvg/include/WildH xvg/cmgui/WildUil \
	xvg/cmgui/WildC xvg/cmgui/WildPx xvg/cmgui/WildH \
	| gzip > cmgui_tar2.gz
	tar -cvf - \
	command/WildC command/WildH command/WildRc command/WildUil \
	finite_element/WildC finite_element/WildH finite_element/WildUil \
	graphics/Makefile graphics/WildC graphics/WildH graphics/WildRc graphics/WildUil \
	graphics/WildCpp graphics/marchg.dat graphics/mcubes.dat \
	html_widget/WildXbm html_widget/WildC html_widget/WildH html_widget/Makefile \
	html_widget/WildMms \
	socket/WildC socket/WildH \
	| gzip > cmgui_tar3.gz
	tar -cvf - \
	$(XML_PATH)/expat_lib/lib/WildAll $(XML_PATH)/expat_lib/include/WildH \
	$(UTILITIES_PATH)/uid2uidh $(UTILITIES_PATH)/uid2uidh_linux \
	$(WORMHOLE_PATH)/lib/WildAll $(WORMHOLE_PATH)/source/wormhole.h \
	$(INTERPRETER_PATH)/source/WildC $(INTERPRETER_PATH)/source/WildH \
	$(INTERPRETER_PATH)/source/WildF90 $(INTERPRETER_PATH)/source/WildPm \
	| gzip > cmgui_tar4.gz
	tar -cvf - \
	$(INTERPRETER_PATH)/generated/mips3-n32-debug/WildA \
	| gzip > cmgui_tar5.gz

compare :
	mv cmgui_tar tmp
	(cd tmp; tar -xvf cmgui_tar > tar.list 2>&1; \
sed "s/./diff/;s/,.*/ >> out.diff/;h;G;G;s/\n//2;s%>> out\.diffdiff %tmp/%;s/diff/echo FILE:/" \
<tar.list >compare.script; rm tar.list)
	mv tmp/cmgui_tar .
	sh tmp/compare.script
#if defined (OLD_CODE)
 	(cd tmp; tar -xvf cmgui_tar > tar.list;
#endif /* defined (OLD_CODE) */

descrip.mms : Makefile descrip_mms.sed
	sed -f descrip_mms.sed < Makefile > descrip.mms

$(OBJECT_PATH)/version.ObjSuffix.h : $(OBJS)
	if [ ! -d $(OBJECT_PATH) ]; then \
		mkdir -p $(OBJECT_PATH); \
	fi	
	echo '/* This is a generated file.  Do not edit.  Edit cmgui.c or cmgui.imake instead */' > $(OBJECT_PATH)/version.ObjSuffix.h;	  
	date > date.h
	sed 's/"//;s/./#define VERSION "CMISS(cmgui) version 001.001.018  &/;s/.$$/&\\nCopyright 1996-2000, Auckland UniServices Ltd."/' < date.h >> $(OBJECT_PATH)/version.ObjSuffix.h
XCOMM	sed 's/"//;s/./"CMISS(cmgui) version 001.001.018  &/;s/.$$/&\\nCopyright 1996-1998, Auckland UniServices Ltd."/' < date.h >> $(OBJECT_PATH)/version.ObjSuffix.h
XCOMM 	sed 's/./#define VERSION "CMISS(cmgui) version 001.001.018  &/;s/.$$/&\\nCopyright 1996-1998, Auckland UniServices Ltd."/' < date.h >> $(OBJECT_PATH)/version.ObjSuffix.h

cmgui.ObjSuffix : cmgui.c $(OBJECT_PATH)/version.ObjSuffix.h $(INTERPRETER_LIB)
	@if [ -f $*.c ]; then \
		set -x; \
		cat $(OBJECT_PATH)/version.ObjSuffix.h $*.c > $(OBJECT_PATH)/$*.ObjSuffix.c ; \
	else \
		set -x; \
		cat $(OBJECT_PATH)/version.ObjSuffix.h $(PRODUCT_SOURCE_PATH)/$*.c > $(OBJECT_PATH)/$*.ObjSuffix.c ; \
	fi
	$(CC) -o $(OBJECT_PATH)/$*.ObjSuffix $(ALL_FLAGS) $(OBJECT_PATH)/$*.ObjSuffix.c;

Target : $(OBJS) cmgui.ObjSuffix
	if [ ! -d $(BIN_PATH) ]; then \
		mkdir -p $(BIN_PATH); \
	fi
#if defined (IRIX) /* switch OperatingSystem */
	cd $(OBJECT_PATH) ; (ls $(OBJS) cmgui.ObjSuffix 2>&1 | sed "s%Cannot access %product_object/%;s%: No such file or directory%%;s%UX:ls: ERROR: %%" > object.list)
#elif defined(LINUX) /* switch OperatingSystem */
	cd $(OBJECT_PATH) ; (ls $(OBJS) cmgui.ObjSuffix 2>&1 | sed "s%ls: %product_object/%;s%: No such file or directory%%" > object.list)
#endif /* switch OperatingSystem */
	cd $(OBJECT_PATH) ; \
	rm -f product_object ; \
	ln -s $(PRODUCT_OBJECT_PATH) product_object ; \
	$(LINK) -o $(BIN_PATH)/Target $(ALL_FLAGS) `cat object.list` $(ALL_LIB)

CmguiFiltLibrary : $(LIB_FILT_OBJS) $(FILT_OBJ) Makefile libCmguiFiltExports
	cd $(OBJECT_PATH)
	@if [ -z "$(FILT_ROOT)" ]; then \
	   echo "Must have filt source and set FILT_ROOT environment variable to make this library"; \
	   exit 1; \
	fi
	rm -f CmguiFiltLibrary.SharedObjectVersion
	rm -f CmguiFiltLibrary
#if defined (IRIX) /* switch OperatingSystem */
	(ls $(LIB_FILT_OBJS) 2>&1 | sed "s%Cannot access %$(PRODUCT_PATH)/%;s%: No such file or directory%%" > object.list)
#elif defined(LINUX) /* switch OperatingSystem */
	(ls $(LIB_FILT_OBJS) 2>&1 | sed "s%ls: %$(PRODUCT_PATH)/%;s%: No such file or directory%%" > object.list)
#endif /* switch OperatingSystem */
	$(LINK) -o CmguiFiltLibrary.SharedObjectVersion -shared -exports_file libCmguiFiltExports -check_registry /usr/lib32/so_locations -soname CmguiFiltLibrary $(ALL_FLAGS) `cat object.list` -lm
	ln -s CmguiFiltLibrary.SharedObjectVersion CmguiFiltLibrary

/* Specify special rule for exnodecmgui.c as it needs headers from Filt */
filt/exnodecmgui.ObjSuffix: filt/exnodecmgui.c force
	@if [ -z "$(FILT_ROOT)" ]; then \
	   echo "Must have filt source and set FILT_ROOT environment variable to make this library"; \
	   exit 1; \
	fi
	@if [ ! -d filt ]; then \
		mkdir -p filt; \
	fi
	@if [ -f filt/exnodecmgui.c ]; then \
	   case filt/exnodecmgui.c in  \
	      ( $(STRICT_FLAGS_PATTERN) ) \
   		   set -x ; $(CC) -o filt/exnodecmgui.ObjSuffix -I$(FILT_ROOT)/lib $(ALL_FLAGS) $(STRICT_FLAGS) $*.c ;; \
	      ( * ) \
	   	   set -x ; $(CC) -o filt/exnodecmgui.ObjSuffix -I$(FILT_ROOT)/lib $(ALL_FLAGS) $*.c ;; \
	   esac ; \
	else \
		set -x ; $(CC) -o filt/exnodecmgui.ObjSuffix -I$(FILT_ROOT)/lib $(ALL_FLAGS) $(PRODUCT_PATH)/$*.c; \
	fi

/* Force is a dummy rule used to ensure some objects are made every time as the
	target 'force' doesnt exist */
force :
	@echo "\n" > /dev/null

#if defined (MEMORY_CHECK)
	  /* Specify rule for making a memory checking object with the normal c file */
	  /* This allows us to make a memory checking version without creating a new
		  extension */
general/debug_memory_check.ObjSuffix: general/debug.c general/debug.h
	if [ ! -d $(OBJECT_PATH)/general ]; then \
		mkdir -p $(OBJECT_PATH)/general; \
	fi
	if [ -f general/debug.c ]; then \
		$(CC) -o $(OBJECT_PATH)/general/debug_memory_check.ObjSuffix $(ALL_FLAGS) -DMEMORY_CHECKING general/debug.c; \
	else \
		$(CC) -o $(OBJECT_PATH)/general/debug_memory_check.ObjSuffix $(ALL_FLAGS) -DMEMORY_CHECKING $(PRODUCT_PATH)/general/debug.c; \
	fi
#endif /* defined (MEMORY_CHECK) */

utilities : SpacesToTabsTarget TabsToSpacesTarget Uid2uidhTarget

SPACES_TO_TABS_SRCS = \
	utilities/spaces_to_tabs.c

BuildNormalTarget(SpacesToTabsTarget,$(UTILITIES_PATH),SPACES_TO_TABS_SRCS,SPACES_TO_TABS_OBJSA,SPACES_TO_TABS_OBJSB,SPACES_TO_TABS_OBJS,-lm) 

TABS_TO_SPACES_SRCS = \
	utilities/tabs_to_spaces.c

BuildNormalTarget(TabsToSpacesTarget,$(UTILITIES_PATH),TABS_TO_SPACES_SRCS,TABS_TO_SPACES_OBJSA,TABS_TO_SPACES_OBJSB,TABS_TO_SPACES_OBJS,-lm) 

/* sinclude used so that the makefile can be run when the dependency file doesn't exist,
 it should then make one */
sinclude $(PRODUCT_SOURCE_PATH)/DependMake
sinclude DependMake
