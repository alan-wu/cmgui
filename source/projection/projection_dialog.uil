!*******************************************************************************
!FILE : projection_dialog.uil
!
!LAST MODIFIED : 20 May 1997
!
!DESCRIPTION :
!The widgets/gadgets for the projection dialog.
!???DB.  Started as map_dialog.uil in emap
!===============================================================================
module projection_dialog_module
	names = case_sensitive

procedure
	identify_prj_dialog_type_menu;
	identify_prj_dialog_type_hammer;
	identify_prj_dialog_type_polar;
	identify_prj_dialog_type_cylind;
	identify_prj_dialog_xi_3_value;
	identify_prj_dialog_range_type;
	identify_prj_dialog_range_autom;
	identify_prj_dialog_range_fixed;
	identify_prj_dialog_range_minim;
	identify_prj_dialog_range_maxim;
	identify_prj_dialog_spectrum;
	identify_prj_dialog_spectrum_no;
	identify_prj_dialog_blue_red;
	identify_prj_dialog_red_blue;
	identify_prj_dialog_log_blue_re;
	identify_prj_dialog_log_red_blu;
	identify_prj_dialog_contours;
	identify_prj_dialog_contours_no;
	identify_prj_dialog_contours_co;
	identify_prj_dialog_contours_va;
	identify_prj_dialog_contours_up;
	increment_number_of_contours;
	identify_prj_dialog_contours_nu;
	identify_prj_dialog_contours_do;
	decrement_number_of_contours;
	id_prj_dialog_elements_menu;
	id_prj_dialog_elements_name;
	id_prj_dialog_elements_bound;
	id_prj_dialog_elements_hide;
	identify_prj_dialog_nodes_menu;
	identify_prj_dialog_nodes_name;
	identify_prj_dialog_nodes_value;
	identify_prj_dialog_nodes_hide;
	identify_prj_dialog_fibre_menu;
	identify_prj_dialog_fibre_hide;
	identify_prj_dialog_fibre_fine;
	identify_prj_dialog_fibre_mediu;
	identify_prj_dialog_fibre_coars;
	identify_prj_dialog_landmarks_b;
	identify_prj_dialog_extrema_but;
	identify_prj_dialog_aspect_rati;
	identify_prj_dialog_print_spect;
	identify_prj_dialog_ok_button;
	update_projection_from_dialog;
	identify_prj_dialog_apply_butto;
	identify_prj_dialog_cancel_butt;
	close_projection_dialog;

identifier
	widget_spacing;
	projection_dialog_structure;
	projection_window_structure;

object
	projection_dialog: XmForm
		{
		arguments
			{
			XmNborderWidth = 1;
			XmNallowOverlap = false;
			XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
			};
		controls
			{
			XmOptionMenu prj_dialog_type_option;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmOptionMenu prj_dialog_type_option;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmRowColumn prj_dialog_xi_3_form;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmRowColumn prj_dialog_xi_3_form;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmRowColumn prj_dialog_range;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmRowColumn prj_dialog_range;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = 0;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmRowColumn prj_dialog_spectrum;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmRowColumn prj_dialog_spectrum;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmRowColumn prj_dialog_contours;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmRowColumn prj_dialog_contours;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmOptionMenu prj_dialog_elements_option;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmOptionMenu prj_dialog_elements_option;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmOptionMenu prj_dialog_nodes_option;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmOptionMenu prj_dialog_nodes_option;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmOptionMenu prj_dialog_fibres_option;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmOptionMenu prj_dialog_fibres_option;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmToggleButtonGadget prj_dialog_landmarks_button;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget =
						XmToggleButtonGadget prj_dialog_landmarks_button;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmToggleButtonGadget prj_dialog_extrema_button;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget =
						XmToggleButtonGadget prj_dialog_extrema_button;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmToggleButtonGadget prj_dialog_aspect_ratio_button;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget =
						XmToggleButtonGadget prj_dialog_aspect_ratio_button;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmToggleButtonGadget prj_dialog_print_spectrum_butto;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget =
						XmToggleButtonGadget prj_dialog_print_spectrum_butto;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_FORM;
					XmNleftOffset = widget_spacing;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_WIDGET;
					XmNtopWidget =
						XmToggleButtonGadget prj_dialog_print_spectrum_butto;
					XmNtopOffset = widget_spacing;
					XmNbottomAttachment = XmATTACH_WIDGET;
					XmNbottomWidget = XmForm prj_dialog_ok_apply_cancel;
					XmNbottomOffset = widget_spacing;
					};
				};
			XmForm prj_dialog_ok_apply_cancel;
			};
		};
	prj_dialog_type_option: XmOptionMenu
		{
		arguments
			{
			XmNlabelString =
			compound_string("Projection :");
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmPulldownMenu
				{
				arguments
					{
					XmNborderWidth = 1;
					};
				controls
					{
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Hammer");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_type_hammer(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Polar");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_type_polar(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Cylindrical");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_type_cylind(projection_dialog_structure);
								};
							};
						};
					};
				};
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_type_menu(projection_dialog_structure);
				};
			};
		};
	prj_dialog_xi_3_form: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNnumColumns = 2;
			XmNorientation = XmHORIZONTAL;
			XmNspacing = widget_spacing;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmOptionMenu prj_dialog_type_option;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel
				{
				arguments
					{
					XmNlabelString =
					compound_string("xi3");
					};
				};
			XmTextField prj_dialog_xi_3_text;
			};
		};
	prj_dialog_xi_3_text: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_xi_3_value(projection_dialog_structure);
				};
			};
		};
	prj_dialog_range: XmRowColumn
		{
		arguments
			{
			XmNnumColumns = 3;
			XmNorientation = XmHORIZONTAL;
			XmNspacing = widget_spacing;
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmRowColumn prj_dialog_xi_3_form;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmOptionMenu prj_dialog_range_option;
			XmRowColumn prj_dialog_range_minimum_form;
			XmRowColumn prj_dialog_range_maximum_form;
			};
		};
	prj_dialog_range_option: XmOptionMenu
		{
		arguments
			{
			XmNlabelString =
			compound_string("Range :");
			};
		controls
			{
			XmPulldownMenu
				{
				arguments
					{
					XmNborderWidth = 1;
					};
				controls
					{
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Automatic");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_range_autom(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Fixed");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_range_fixed(projection_dialog_structure);
								};
							};
						};
					};
				};
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_range_type(projection_dialog_structure);
				};
			};
		};
	prj_dialog_range_minimum_form: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNnumColumns = 2;
			XmNorientation = XmHORIZONTAL;
			XmNspacing = widget_spacing;
			};
		controls
			{
			XmLabel
				{
				arguments
					{
					XmNlabelString =
					compound_string("min");
					};
				};
			XmTextField prj_dialog_range_minimum_text;
			};
		};
	prj_dialog_range_minimum_text: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_range_minim(projection_dialog_structure);
				};
			};
		};
	prj_dialog_range_maximum_form: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNnumColumns = 2;
			XmNorientation = XmHORIZONTAL;
			XmNspacing = widget_spacing;
			};
		controls
			{
			XmLabel
				{
				arguments
					{
					XmNlabelString =
					compound_string("max");
					};
				};
			XmTextField prj_dialog_range_maximum_text;
			};
		};
	prj_dialog_range_maximum_text: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_range_maxim(projection_dialog_structure);
				};
			};
		};
	prj_dialog_spectrum: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNnumColumns = 1;
			XmNorientation = XmHORIZONTAL;
			XmNspacing = widget_spacing;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmRowColumn prj_dialog_range;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmOptionMenu prj_dialog_spectrum_type_option;
			};
		};
	prj_dialog_spectrum_type_option: XmOptionMenu
		{
		arguments
			{
			XmNlabelString =
			compound_string("Spectrum :");
			};
		controls
			{
			XmPulldownMenu
				{
				arguments
					{
					XmNborderWidth = 1;
					};
				controls
					{
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("none");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_spectrum_no(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("blue->red");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_blue_red(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("red->blue");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_red_blue(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("log(blue->red)");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_log_blue_re(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("log(red->blue)");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_log_red_blu(projection_dialog_structure);
								};
							};
						};
					};
				};
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_spectrum(projection_dialog_structure);
				};
			};
		};
	prj_dialog_contours: XmRowColumn
		{
		arguments
			{
			XmNnumColumns = 2;
			XmNorientation = XmHORIZONTAL;
			XmNspacing = widget_spacing;
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmRowColumn prj_dialog_spectrum;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmOptionMenu prj_dialog_contours_type_option;
			XmForm prj_dialog_contours_number_form;
			};
		};
	prj_dialog_contours_type_option: XmOptionMenu
		{
		arguments
			{
			XmNlabelString =
			compound_string("Contours :");
			};
		controls
			{
			XmPulldownMenu
				{
				arguments
					{
					XmNborderWidth = 1;
					};
				controls
					{
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("none");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_contours_no(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("variable thickness");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_contours_va(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("constant thickness");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_contours_co(projection_dialog_structure);
								};
							};
						};
					};
				};
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_contours(projection_dialog_structure);
				};
			};
		};
	prj_dialog_contours_number_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			};
		controls
			{
			XmArrowButtonGadget prj_dialog_contours_down;
			XmLabel prj_dialog_contours_number;
			XmArrowButtonGadget prj_dialog_contours_up;
			};
		};
	prj_dialog_contours_down: XmArrowButtonGadget
		{
		arguments
			{
			XmNarrowDirection = XmARROW_DOWN;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_contours_do(projection_dialog_structure);
				};
			XmNactivateCallback = procedures
				{
				decrement_number_of_contours(projection_dialog_structure);
				};
			};
		};
	prj_dialog_contours_number: XmLabel
		{
		arguments
			{
			XmNlabelString =
			compound_string("99");
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftWidget = XmArrowButtonGadget prj_dialog_contours_down;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_contours_nu(projection_dialog_structure);
				};
			};
		};
	prj_dialog_contours_up: XmArrowButtonGadget
		{
		arguments
			{
			XmNarrowDirection = XmARROW_UP;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftWidget = XmLabel prj_dialog_contours_number;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_contours_up(projection_dialog_structure);
				};
			XmNactivateCallback = procedures
				{
				increment_number_of_contours(projection_dialog_structure);
				};
			};
		};
	prj_dialog_elements_option: XmOptionMenu
		{
		arguments
			{
			XmNlabelString =
			compound_string("Elements :");
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmRowColumn prj_dialog_contours;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmPulldownMenu
				{
				arguments
					{
					XmNborderWidth = 1;
					};
				controls
					{
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Names and boundaries");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								id_prj_dialog_elements_name(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Boundaries only");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								id_prj_dialog_elements_bound(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Hide");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								id_prj_dialog_elements_hide(projection_dialog_structure);
								};
							};
						};
					};
				};
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_prj_dialog_elements_menu(projection_dialog_structure);
				};
			};
		};
	prj_dialog_nodes_option: XmOptionMenu
		{
		arguments
			{
			XmNlabelString =
			compound_string("Nodes :");
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmOptionMenu prj_dialog_elements_option;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmPulldownMenu
				{
				arguments
					{
					XmNborderWidth = 1;
					};
				controls
					{
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Name");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_nodes_name(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Value");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_nodes_value(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Hide");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_nodes_hide(projection_dialog_structure);
								};
							};
						};
					};
				};
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_nodes_menu(projection_dialog_structure);
				};
			};
		};
	prj_dialog_fibres_option: XmOptionMenu
		{
		arguments
			{
			XmNlabelString =
			compound_string("Fibres :");
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmOptionMenu prj_dialog_nodes_option;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmPulldownMenu
				{
				arguments
					{
					XmNborderWidth = 1;
					};
				controls
					{
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Hide");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_fibre_hide(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Fine");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_fibre_fine(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Medium");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_fibre_mediu(projection_dialog_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("Coarse");
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								identify_prj_dialog_fibre_coars(projection_dialog_structure);
								};
							};
						};
					};
				};
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_fibre_menu(projection_dialog_structure);
				};
			};
		};
	prj_dialog_landmarks_button : XmToggleButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Landmarks");
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNfillOnSelect = true;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmOptionMenu prj_dialog_fibres_option;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_landmarks_b(projection_dialog_structure);
				};
			};
		};
	prj_dialog_extrema_button : XmToggleButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Extrema");
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNfillOnSelect = true;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmToggleButtonGadget prj_dialog_landmarks_button;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_extrema_but(projection_dialog_structure);
				};
			};
		};
	prj_dialog_aspect_ratio_button : XmToggleButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Maintain aspect ratio");
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNfillOnSelect = true;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmToggleButtonGadget prj_dialog_extrema_button;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_aspect_rati(projection_dialog_structure);
				};
			};
		};
	prj_dialog_print_spectrum_butto : XmToggleButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Print spectrum");
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNfillOnSelect = true;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmToggleButtonGadget prj_dialog_aspect_ratio_button;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_print_spect(projection_dialog_structure);
				};
			};
		};
	prj_dialog_ok_apply_cancel: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_NONE;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = widget_spacing;
			};
		controls
			{
			XmPushButtonGadget prj_dialog_ok_button;
			XmSeparator prj_dialog_ok_separator;
			XmPushButtonGadget prj_dialog_apply_button;
			XmSeparator prj_dialog_cancel_separator;
			XmPushButtonGadget prj_dialog_cancel_button;
			};
		};
	prj_dialog_ok_button: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("OK");
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_ok_button(projection_dialog_structure);
				};
			XmNactivateCallback = procedures
				{
				update_projection_from_dialog(projection_window_structure);
				};
			};
		};
	prj_dialog_ok_separator: XmSeparator
		{
		arguments
			{
			XmNseparatorType = XmNO_LINE;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmPushButtonGadget prj_dialog_ok_button;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	prj_dialog_apply_button: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Apply");
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmSeparator prj_dialog_ok_separator;
			XmNrightAttachment = XmATTACH_WIDGET;
			XmNrightOffset = widget_spacing;
			XmNrightWidget = XmSeparator prj_dialog_cancel_separator;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_apply_butto(projection_dialog_structure);
				};
			XmNactivateCallback = procedures
				{
				update_projection_from_dialog(projection_window_structure);
				};
			};
		};
	prj_dialog_cancel_separator: XmSeparator
		{
		arguments
			{
			XmNseparatorType = XmNO_LINE;
			XmNleftAttachment = XmATTACH_NONE;
			XmNrightAttachment = XmATTACH_WIDGET;
			XmNrightOffset = widget_spacing;
			XmNrightWidget = XmPushButtonGadget prj_dialog_cancel_button;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	prj_dialog_cancel_button: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Cancel");
			XmNleftAttachment = XmATTACH_NONE;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_prj_dialog_cancel_butt(projection_dialog_structure);
				};
			XmNactivateCallback = procedures
				{
				close_projection_dialog(projection_dialog_structure);
				};
			};
		};
end module;
