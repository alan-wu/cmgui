!*******************************************************************************
! FILE : control_curve_editor_dialog.uil
!
! LAST MODIFIED : 8 November 1999
!
! DESCRIPTION :
! The widgets for the variable editor dialog widget.
!===============================================================================
module var_editor_dialog
	version = 'v1.0'

procedure
! ---------|---------|---------|- 31 characters max
	curve_edd_destroy_CB;
	curve_edd_id_select_form;
	curve_edd_id_editor_form;
	curve_edd_id_ok_btn;
	curve_edd_id_apply_btn;
	curve_edd_id_revert_btn;
	curve_edd_id_cancel_btn;
	curve_edd_ok_CB;
	curve_edd_apply_CB;
	curve_edd_revert_CB;
	curve_edd_cancel_CB;

value
	shadow_size         :   2;
	form_space_out      :   2;
	form_space_in       :   4;
	curve_edd_3d_space   :   3;
	curve_edd_3d_height  : 200;

value
	curve_edd_font       : font_table(font('-*-HELVETICA-MEDIUM-R-*--*-80-*-*-*-*-ISO8859-1'));
	curve_edd_font_large : font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
	curve_edd_font_bold  : font_table(font('-*-HELVETICA-BOLD-R-*--*-80-*-*-*-*-ISO8859-1'));

identifier
	!Pointer to data for this instance of element_group_editor_dialog widget
	curve_edd_structure;
	!The gap between widgets
	widget_spacing;
	!fonts here
	normal_font;
	button_font;
	list_font;
	heading_font;

object
	curve_edd_widget: XmForm
	{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = curve_edd_structure;
			};
		controls
			{
			XmForm curve_edd_select_form;
			XmForm curve_edd_editor_form;
			XmRowColumn curve_edd_control;
			};
		callbacks
			{
			XmNdestroyCallback = procedure curve_edd_destroy_CB();
			};
		};
	curve_edd_select_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNuserData = curve_edd_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				curve_edd_id_select_form(curve_edd_structure);
			};
		};
	curve_edd_editor_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmForm curve_edd_select_form;
			XmNbottomAttachment = XmATTACH_WIDGET;
			XmNbottomOffset = 0;
			XmNbottomWidget = XmRowColumn curve_edd_control;
			XmNuserData = curve_edd_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				curve_edd_id_editor_form(curve_edd_structure);
			};
		};
	curve_edd_control: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNpacking = XmPACK_COLUMN;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_NONE;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = curve_edd_structure;
			};
		controls
			{
			XmPushButtonGadget curve_edd_control_ok;
			XmPushButtonGadget curve_edd_control_apply;
			XmPushButtonGadget curve_edd_control_revert;
			XmPushButtonGadget curve_edd_control_cancel;
			};
		};
!*******************************************************************************
	curve_edd_control_ok: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("OK");
			XmNuserData = curve_edd_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				curve_edd_id_ok_btn(curve_edd_structure);
			XmNactivateCallback = procedure curve_edd_ok_CB();
			};
		};
	curve_edd_control_apply: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Apply");
			XmNuserData = curve_edd_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				curve_edd_id_apply_btn(curve_edd_structure);
			XmNactivateCallback = procedure curve_edd_apply_CB();
			};
		};
	curve_edd_control_revert: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Revert");
			XmNuserData = curve_edd_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure 
				curve_edd_id_revert_btn(curve_edd_structure);
			XmNactivateCallback = procedure curve_edd_revert_CB();
			};
		};
	curve_edd_control_cancel: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Cancel");
			XmNuserData = curve_edd_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure 
				curve_edd_id_cancel_btn(curve_edd_structure);
			XmNactivateCallback = procedure curve_edd_cancel_CB();
			};
		};
end module;
