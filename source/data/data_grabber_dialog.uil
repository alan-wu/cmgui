!*******************************************************************************
! FILE : data_grabber_d.uil
!
! LAST MODIFIED : 21 January 1995
!
! DESCRIPTION :
! The widgets for the data_grabber_d data_grabber_d widget.
!===============================================================================
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is cmgui part of cmiss.
 *
 * The Initial Developer of the Original Code is
 * Auckland Uniservices Ltd, Auckland, New Zealand.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
module data_grabber_d
	version = 'v1.0'

procedure
	data_grabber_d_identify_button    (integer);
	data_grabber_d_destroy_CB          ();
	data_grabber_d_control_CB          (integer);
	data_grabber_d_mode_CB          (integer);
	data_grabber_d_tangent_CB          (integer);
	data_grabber_d_type_CB          (integer);

value
	shadow_size        : 2;
	form_space_out    :  2;
	form_space_in      :  4;
	data_grabber_d_3d_space  :  3;
	data_grabber_d_3d_height  :  200;

value
	data_grabber_d_font              : font_table(font('-*-HELVETICA-MEDIUM-R-*--*-80-*-*-*-*-ISO8859-1'));
	data_grabber_d_font_large        : font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
	data_grabber_d_font_bold        : font_table(font('-*-HELVETICA-BOLD-R-*--*-80-*-*-*-*-ISO8859-1'));

identifier
	!The gap between widgets
	widget_spacing;
	!Pointer to data specific to this instance of the data_grabber_d widget
	Data_grabber_d_structure;
	!value identifier
	data_grabber_d_grabber_form_ID;
	data_grabber_d_toggle_form_ID;
	data_grabber_d_ok_ID;
	data_grabber_d_record_ID;
	data_grabber_d_mode_form_ID;
	data_grabber_d_tangent_form_ID;
	data_grabber_d_type_form_ID;
	data_grabber_d_node_g_form_ID;

!**************************************************************************************
!**************************************************************************************
! The data_grabber_d widget
object
	data_grabber_dialog_widget: XmForm
	{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmRowColumn data_grabber_d_toggle;
			XmForm data_grabber_d_node_group_form;
			XmForm data_grabber_d_grabber;
			XmRowColumn data_grabber_d_control;
			};
		callbacks
			{
			XmNdestroyCallback = procedure data_grabber_d_destroy_CB ();
			};
		};
	data_grabber_d_toggle: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure data_grabber_d_identify_button (data_grabber_d_toggle_form_ID);
			};
		};
	data_grabber_d_mode: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmLabelGadget data_grabber_d_mode_label;
			XmRowColumn data_grabber_d_mode_rowcol;
			};
		callbacks
			{
			MrmNcreateCallback = procedure data_grabber_d_identify_button (data_grabber_d_mode_form_ID);
			};
		};
	data_grabber_d_tangent: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmLabelGadget data_grabber_d_tangent_label;
			XmRowColumn data_grabber_d_tangent_rowcol;
			};
		callbacks
			{
			MrmNcreateCallback = procedure data_grabber_d_identify_button (data_grabber_d_tangent_form_ID);
			};
		};
	data_grabber_d_type: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmLabelGadget data_grabber_d_type_label;
			XmRowColumn data_grabber_d_type_rowcol;
			};
		callbacks
			{
			MrmNcreateCallback = procedure data_grabber_d_identify_button (data_grabber_d_type_form_ID);
			};
		};
	data_grabber_d_grabber: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmForm data_grabber_d_node_group_form;
			XmNbottomAttachment = XmATTACH_WIDGET;
			XmNbottomOffset = 0;
			XmNbottomWidget = XmRowColumn data_grabber_d_control;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure data_grabber_d_identify_button (data_grabber_d_grabber_form_ID);
			};
		};
!**************************************************************************************
	data_grabber_d_control: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNpacking = XmPACK_COLUMN;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_NONE;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmPushButtonGadget data_grabber_d_control_record;
			XmPushButtonGadget data_grabber_d_control_ok;
			};
		};
	data_grabber_d_control_ok: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("OK");
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure data_grabber_d_identify_button (data_grabber_d_ok_ID);
			XmNactivateCallback = procedure data_grabber_d_control_CB (data_grabber_d_ok_ID);
			};
		};
	data_grabber_d_control_record: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Record");
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure data_grabber_d_identify_button (data_grabber_d_record_ID);
			XmNactivateCallback = procedure data_grabber_d_control_CB (data_grabber_d_record_ID);
			};
		};
	data_grabber_d_mode_label: XmLabelGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Data:");
			XmNfontList = data_grabber_d_font_large;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		};
	data_grabber_d_mode_rowcol: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNorientation = XmVERTICAL;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmLabelGadget data_grabber_d_mode_label;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmToggleButton data_grabber_d_mode_position;
			XmToggleButton data_grabber_d_mode_tangent;
			XmToggleButton data_grabber_d_mode_normal;
			};
		};
	data_grabber_d_mode_position: XmToggleButton
		{
		arguments
			{
			XmNset = true;
			XmNindicatorType = XmN_OF_MANY;
			XmNlabelString =
			compound_string("Position");
			XmNfontList = data_grabber_d_font;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			XmNvalueChangedCallback = procedure data_grabber_d_mode_CB (0);
			};
		};
	data_grabber_d_mode_tangent: XmToggleButton
		{
		arguments
			{
			XmNset = false;
			XmNindicatorType = XmN_OF_MANY;
			XmNlabelString =
			compound_string("Tangent");
			XmNfontList = data_grabber_d_font;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			XmNvalueChangedCallback = procedure data_grabber_d_mode_CB (1);
			};
		};
	data_grabber_d_mode_normal: XmToggleButton
		{
		arguments
			{
			XmNset = false;
			XmNindicatorType = XmN_OF_MANY;
			XmNlabelString =
			compound_string("Normal");
			XmNfontList = data_grabber_d_font;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			XmNvalueChangedCallback = procedure data_grabber_d_mode_CB (2);
			};
		};
	data_grabber_d_tangent_label: XmLabelGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Tangent as:");
			XmNfontList = data_grabber_d_font_large;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		};
	data_grabber_d_tangent_rowcol: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNorientation = XmVERTICAL;
			XmNradioBehavior = true;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmLabelGadget data_grabber_d_tangent_label;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmToggleButton data_grabber_d_tangent_vector;
			XmToggleButton data_grabber_d_tangent_fibre;
			};
		};
	data_grabber_d_tangent_vector: XmToggleButton
		{
		arguments
			{
			XmNset = true;
			XmNlabelString =
			compound_string("Vector");
			XmNfontList = data_grabber_d_font;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			XmNvalueChangedCallback = procedure data_grabber_d_tangent_CB (0);
			};
		};
	data_grabber_d_tangent_fibre: XmToggleButton
		{
		arguments
			{
			XmNset = false;
			XmNlabelString =
			compound_string("Fibre");
			XmNfontList = data_grabber_d_font;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			XmNvalueChangedCallback = procedure data_grabber_d_tangent_CB (1);
			};
		};
	data_grabber_d_type_label: XmLabelGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Data as:");
			XmNfontList = data_grabber_d_font_large;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		};
	data_grabber_d_type_rowcol: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNorientation = XmVERTICAL;
			XmNradioBehavior = true;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmLabelGadget data_grabber_d_type_label;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmToggleButton data_grabber_d_type_vector;
			XmToggleButton data_grabber_d_type_fibre;
			};
		};
	data_grabber_d_type_vector: XmToggleButton
		{
		arguments
			{
			XmNset = true;
			XmNlabelString =
			compound_string("Node");
			XmNfontList = data_grabber_d_font;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			XmNvalueChangedCallback = procedure data_grabber_d_type_CB (0);
			};
		};
	data_grabber_d_type_fibre: XmToggleButton
		{
		arguments
			{
			XmNset = false;
			XmNlabelString =
			compound_string("Point");
			XmNfontList = data_grabber_d_font;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			XmNvalueChangedCallback = procedure data_grabber_d_type_CB (1);
			};
		};

	data_grabber_d_node_group_form: XmForm
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = data_grabber_d_toggle;
			XmNuserData = Data_grabber_d_structure;
			};
		controls
			{
			XmLabelGadget data_grabber_d_node_group_label;
			XmForm data_grabber_d_node_choose_form;
			};
		};
	data_grabber_d_node_group_label: XmLabelGadget
		{
		arguments
			{
			XmNlabelString =
				compound_string("Group:");
			XmNfontList = data_grabber_d_font_large;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		};
	data_grabber_d_node_choose_form: XmForm
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = 0;
			XmNleftWidget = data_grabber_d_node_group_label;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Data_grabber_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure data_grabber_d_identify_button (data_grabber_d_node_g_form_ID);
			};
		};
end module;
!**************************************************************************************
