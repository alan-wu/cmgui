!*******************************************************************************
!FILE : pacing_window.uil
!
!LAST MODIFIED : 14 May 2004
!
!DESCRIPTION :
!The widgets/gadgets for the pacing window in the acquisition work area.
!===============================================================================
module pacing
	names = case_sensitive

procedure
	close_Pacing_window;
	destroy_Pacing_window_callback;
	id_pacing_electrodes_form;
	id_pacing_electrodes_value;
	ch_pacing_electrodes_value;
	id_pacing_return_electrodes_for;
	id_pacing_return_electrodes_val;
	ch_pacing_return_electrodes_val;
	id_pacing_control_voltage_form;
	id_pacing_control_voltage_value;
	ch_pacing_control_voltage_value;
	id_pacing_control_voltage_slide;
	ch_pacing_control_voltage_slide;
	id_pacing_control_width_form;
	id_pacing_control_width_value;
	ch_pacing_control_width_value;
	id_pacing_control_width_slider;
	ch_pacing_control_width_slider;
	id_pacing_basic_cycle_length_fo;
	id_pacing_basic_cycle_length_va;
	ch_pacing_basic_cycle_length_va;
	id_pacing_basic_cycle_length_sl;
	ch_pacing_basic_cycle_length_sl;
	id_pacing_basic_cycle_length_pa;
	ch_pacing_basic_cycle_length_pa;
	id_pacing_si_form;
	id_pacing_s_number_dec;
	decrement_s_number;
	id_pacing_s_number_label;
	id_pacing_s_number_inc;
	increment_s_number;
	id_pacing_number_of_si_label;
	id_pacing_number_of_si_dec;
	decrement_number_of_si;
	id_pacing_number_of_si_value;
	ch_pacing_number_of_si_value;
	id_pacing_number_of_si_inc;
	increment_number_of_si;
	id_pacing_si_length_value;
	ch_pacing_si_length_value;
	id_pacing_number_of_s_types_for;
	id_pacing_number_of_s_types_lab;
	id_pacing_number_of_s_types_dec;
	decrement_number_of_s_types;
	id_pacing_number_of_s_types_val;
	id_pacing_number_of_s_types_inc;
	increment_number_of_s_types;
	id_pacing_sn_length_label;
	id_pacing_sn_length_change_form;
	id_pacing_sn_length_change_labe;
	id_pacing_sn_length_change_valu;
	ch_pacing_sn_length_change_valu;
	id_pacing_sn_length_factor_form;
	id_pacing_sn_length_factor_labe;
	id_pacing_sn_length_factor_valu;
	ch_pacing_sn_length_factor_valu;
	id_pacing_sn_length_inc_dec_cho;
	id_pacing_sn_length_increment_b;
	pacing_set_sn_length_increment;
	id_pacing_sn_length_decrement_b;
	pacing_set_sn_length_decrement;
	id_pacing_restitution_time_pace;
	ch_pacing_restitution_time_pace;
	id_pacing_restitution_time_incr;
	ac_pacing_restitution_time_incr;
	id_pacing_restitution_time_decr;
	ac_pacing_restitution_time_decr;
	id_pacing_restitution_time_repe;
	ac_pacing_restitution_time_repe;
	id_pacing_restitution_time_rese;
	ac_pacing_restitution_time_rese;
	id_pacing_sn_s1_pause_form;
	id_pacing_sn_s1_pause_label;
	id_pacing_sn_s1_pause_value;
	ch_pacing_sn_s1_pause_value;
	id_pacing_decrement_threshold_f;
	id_pacing_decrement_threshold_v;
	ch_pacing_decrement_threshold_v;
	id_pacing_restitution_curve_pac;
	ch_pacing_restitution_curve_pac;

identifier
!	identifying_colour;
	pacing_window_structure;
	widget_spacing;
	! Fonts
	button_font;
	heading_font;
	list_font;
	menu_font;
	normal_font;
	normal_non_proportional_font;
	small_font;

object
!The window for controlling pacing protocols
	pacing_window: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNdialogTitle = "Pacing";
			};
		controls
			{
			XmScrolledWindow
				{
				arguments
					{
					XmNborderWidth = 0;
					XmNscrollBarDisplayPolicy = XmAS_NEEDED;
					XmNscrollingPolicy = XmAUTOMATIC;
					XmNleftAttachment = XmATTACH_FORM;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = 0;
					XmNtopAttachment = XmATTACH_FORM;
					XmNtopOffset = 0;
					XmNbottomAttachment = XmATTACH_FORM;
					XmNbottomOffset = 0;
					};
				controls
					{
					XmForm
						{
						arguments
							{
							XmNborderWidth = 0;
							};
						controls
							{
							XmForm pacing_electrodes_form;
							XmForm pacing_return_electrodes_form;
							XmSeparator pacing_return_electrodes_separa;
							XmForm pacing_control_voltage_form;
							XmForm pacing_control_width_form;
							XmSeparator pacing_control_separator;
							XmForm pacing_basic_cycle_control_form;
							XmSeparator pacing_basic_cycle_control_sepa;
							XmForm pacing_settings_form;
							XmSeparator pacing_settings_separator;
							XmForm pacing_restitution_time_form;
							XmSeparator pacing_restitution_time_separat;
							XmForm pacing_restitution_curve_form;
							};
						callbacks
							{
							XmNdestroyCallback = procedures
								{
								destroy_Pacing_window_callback(pacing_window_structure);
								};
							};
						};
					};
				};
			};
		};
!	pacing_window: XmForm
!		{
!		arguments
!			{
!			XmNborderWidth = 0;
!			XmNdialogTitle = "Pacing";
!!			XmNbackground = identifying_colour;
!			};
!		controls
!			{
!			XmForm pacing_electrodes_form;
!			XmForm pacing_return_electrodes_form;
!			XmSeparator pacing_return_electrodes_separa;
!			XmForm pacing_control_voltage_form;
!			XmForm pacing_control_width_form;
!			XmSeparator pacing_control_separator;
!			XmForm pacing_basic_cycle_control_form;
!			XmSeparator pacing_basic_cycle_control_sepa;
!			XmForm pacing_settings_form;
!			XmSeparator pacing_settings_separator;
!			XmForm pacing_restitution_time_form;
!			XmSeparator pacing_restitution_time_separat;
!			XmForm pacing_restitution_curve_form;
!			};
!		callbacks
!			{
!			XmNdestroyCallback = procedures
!				{
!				destroy_Pacing_window_callback(pacing_window_structure);
!				};
!			};
!		};
	pacing_electrodes_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_electrodes_label;
			XmTextField pacing_electrodes_value;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_electrodes_form(pacing_window_structure);
				};
			};
		};
	pacing_electrodes_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Pacing electrodes");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	pacing_electrodes_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_electrodes_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_electrodes_value(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_electrodes_value(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_electrodes_value(pacing_window_structure);
				};
			};
		};
	pacing_return_electrodes_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_electrodes_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_return_electrodes_label;
			XmTextField pacing_return_electrodes_value;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_return_electrodes_for(pacing_window_structure);
				};
			};
		};
	pacing_return_electrodes_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Return electrodes");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	pacing_return_electrodes_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_return_electrodes_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_return_electrodes_val(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_return_electrodes_val(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_return_electrodes_val(pacing_window_structure);
				};
			};
		};
	pacing_return_electrodes_separa: XmSeparator
		{
		arguments
			{
			XmNseparatorType = XmSINGLE_LINE;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_return_electrodes_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	pacing_control_voltage_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmSeparator pacing_return_electrodes_separa;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_control_voltage_label;
			XmTextField pacing_control_voltage_value;
			XmScrollBar pacing_control_voltage_slide;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_control_voltage_form(pacing_window_structure);
				};
			};
		};
	pacing_control_voltage_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Control square wave amplitude (V)");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	pacing_control_voltage_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_control_voltage_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_control_voltage_value(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_control_voltage_value(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_control_voltage_value(pacing_window_structure);
				};
			};
		};
	pacing_control_voltage_slide: XmScrollBar
		{
		arguments
			{
			XmNvalue = 50;
			XmNwidth = 100;
			XmNminimum = 0;
			XmNsliderSize = 10;
			XmNmaximum = 110;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmTextField pacing_control_voltage_value;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_control_voltage_slide(pacing_window_structure);
				};
			XmNvalueChangedCallback = procedures
				{
				ch_pacing_control_voltage_slide(pacing_window_structure);
				};
			};
		};
	pacing_control_width_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_control_voltage_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_control_width_label;
			XmTextField pacing_control_width_value;
			XmScrollBar pacing_control_width_slider;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_control_width_form(pacing_window_structure);
				};
			};
		};
	pacing_control_width_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Control square wave pulse width (ms)");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	pacing_control_width_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_control_width_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_control_width_value(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_control_width_value(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_control_width_value(pacing_window_structure);
				};
			};
		};
	pacing_control_width_slider: XmScrollBar
		{
		arguments
			{
			XmNvalue = 50;
			XmNwidth = 100;
			XmNminimum = 0;
			XmNsliderSize = 10;
			XmNmaximum = 110;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmTextField pacing_control_width_value;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_control_width_slider(pacing_window_structure);
				};
			XmNvalueChangedCallback = procedures
				{
				ch_pacing_control_width_slider(pacing_window_structure);
				};
			};
		};
	pacing_control_separator: XmSeparator
		{
		arguments
			{
			XmNseparatorType = XmSINGLE_LINE;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_control_width_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	pacing_basic_cycle_control_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmSeparator pacing_control_separator;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmForm pacing_basic_cycle_length_form;
			XmToggleButtonGadget pacing_basic_cycle_length_pace;
			};
		};
	pacing_basic_cycle_length_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			};
		controls
			{
			XmLabel pacing_basic_cycle_length_label;
			XmTextField pacing_basic_cycle_length_value;
			XmScrollBar pacing_basic_cycle_length_slide;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_basic_cycle_length_fo(pacing_window_structure);
				};
			};
		};
	pacing_basic_cycle_length_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Basic cycle length (ms)");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	pacing_basic_cycle_length_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_basic_cycle_length_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_basic_cycle_length_va(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_basic_cycle_length_va(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_basic_cycle_length_va(pacing_window_structure);
				};
			};
		};
	pacing_basic_cycle_length_slide: XmScrollBar
		{
		arguments
			{
			XmNvalue = 50;
			XmNwidth = 100;
			XmNminimum = 0;
			XmNsliderSize = 10;
			XmNmaximum = 110;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmTextField pacing_basic_cycle_length_value;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_basic_cycle_length_sl(pacing_window_structure);
				};
			XmNvalueChangedCallback = procedures
				{
				ch_pacing_basic_cycle_length_sl(pacing_window_structure);
				};
			};
		};
	pacing_basic_cycle_length_pace: XmToggleButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Pace");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_basic_cycle_length_form;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_basic_cycle_length_pa(pacing_window_structure);
				};
			XmNvalueChangedCallback = procedures
				{
				ch_pacing_basic_cycle_length_pa(pacing_window_structure);
				};
			};
		};
	pacing_basic_cycle_control_sepa: XmSeparator
		{
		arguments
			{
			XmNseparatorType = XmSINGLE_LINE;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_basic_cycle_length_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	pacing_settings_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmSeparator pacing_basic_cycle_control_sepa;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_settings_label;
			XmForm pacing_number_of_s_types_form;
			XmForm pacing_si_form;
			XmForm pacing_sn_s1_pause_form;
			};
		};
	pacing_settings_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Pacing");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	pacing_number_of_s_types_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmLabel pacing_settings_label;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_number_of_s_types_label;
			XmArrowButtonGadget pacing_number_of_s_types_dec;
			XmLabel pacing_number_of_s_types_value;
			XmArrowButtonGadget pacing_number_of_s_types_inc;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_s_types_for(pacing_window_structure);
				};
			};
		};
	pacing_number_of_s_types_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Number of stimulus types");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_s_types_lab(pacing_window_structure);
				};
			};
		};
	pacing_number_of_s_types_dec: XmArrowButtonGadget
		{
		arguments
			{
			XmNarrowDirection = XmARROW_DOWN;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_number_of_s_types_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_s_types_dec(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				decrement_number_of_s_types(pacing_window_structure);
				};
			};
		};
	pacing_number_of_s_types_value: XmLabel
		{
		arguments
			{
			XmNfontList = button_font;
			XmNlabelString = compound_string("");
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmArrowButtonGadget pacing_number_of_s_types_dec;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_s_types_val(pacing_window_structure);
				};
			};
		};
	pacing_number_of_s_types_inc: XmArrowButtonGadget
		{
		arguments
			{
			XmNarrowDirection = XmARROW_UP;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_number_of_s_types_value;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_s_types_inc(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				increment_number_of_s_types(pacing_window_structure);
				};
			};
		};
	pacing_si_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_number_of_s_types_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmArrowButtonGadget pacing_s_number_dec;
			XmLabel pacing_s_number_label;
			XmArrowButtonGadget pacing_s_number_inc;
			XmLabel pacing_number_of_si_label;
			XmArrowButtonGadget pacing_number_of_si_dec;
			XmTextField pacing_number_of_si_value;
			XmArrowButtonGadget pacing_number_of_si_inc;
			XmLabel pacing_si_length_label;
			XmTextField pacing_si_length_value;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_si_form(pacing_window_structure);
				};
			};
		};
	pacing_s_number_dec: XmArrowButtonGadget
		{
		arguments
			{
			XmNarrowDirection = XmARROW_DOWN;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_s_number_dec(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				decrement_s_number(pacing_window_structure);
				};
			};
		};
	pacing_s_number_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("S");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmArrowButtonGadget pacing_s_number_dec;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_s_number_label(pacing_window_structure);
				};
			};
		};
	pacing_s_number_inc: XmArrowButtonGadget
		{
		arguments
			{
			XmNarrowDirection = XmARROW_UP;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_s_number_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_s_number_inc(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				increment_s_number(pacing_window_structure);
				};
			};
		};
	pacing_number_of_si_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("number");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmArrowButtonGadget pacing_s_number_inc;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_si_label(pacing_window_structure);
				};
			};
		};
	pacing_number_of_si_dec: XmArrowButtonGadget
		{
		arguments
			{
			XmNarrowDirection = XmARROW_DOWN;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_number_of_si_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_si_dec(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				decrement_number_of_si(pacing_window_structure);
				};
			};
		};
	pacing_number_of_si_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 3;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmArrowButtonGadget pacing_number_of_si_dec;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_si_value(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_number_of_si_value(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_number_of_si_value(pacing_window_structure);
				};
			};
		};
	pacing_number_of_si_inc: XmArrowButtonGadget
		{
		arguments
			{
			XmNarrowDirection = XmARROW_UP;
			XmNshadowThickness = 0;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmTextField pacing_number_of_si_value;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_number_of_si_inc(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				increment_number_of_si(pacing_window_structure);
				};
			};
		};
	pacing_si_length_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("length (ms)");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmArrowButtonGadget pacing_number_of_si_inc;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	pacing_si_length_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_si_length_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_si_length_value(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_si_length_value(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_si_length_value(pacing_window_structure);
				};
			};
		};
	pacing_sn_s1_pause_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_si_form;
			XmNbottomAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmLabel pacing_sn_s1_pause_label;
			XmTextField pacing_sn_s1_pause_value;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_s1_pause_form(pacing_window_structure);
				};
			};
		};
	pacing_sn_s1_pause_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Sn-S1 pause (ms)");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_s1_pause_label(pacing_window_structure);
				};
			};
		};
	pacing_sn_s1_pause_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_sn_s1_pause_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_s1_pause_value(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_sn_s1_pause_value(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_sn_s1_pause_value(pacing_window_structure);
				};
			};
		};
	pacing_settings_separator: XmSeparator
		{
		arguments
			{
			XmNseparatorType = XmSINGLE_LINE;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_settings_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	pacing_restitution_time_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmSeparator pacing_settings_separator;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_restitution_time_label;
			XmLabel pacing_sn_length_label;
			XmForm pacing_sn_length_change_form;
			XmForm pacing_sn_length_factor_form;
			XmForm pacing_pace_inc_dec_reset_form;
			};
		};
	pacing_restitution_time_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Restitution time");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	pacing_sn_length_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Sn length (ms) :");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmLabel pacing_restitution_time_label;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_length_label(pacing_window_structure);
				};
			};
		};
	pacing_sn_length_change_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmLabel pacing_sn_length_label;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_sn_length_change_label_1;
			XmOptionMenu pacing_sn_length_inc_dec_choice;
			XmLabel pacing_sn_length_change_label_2;
			XmTextField pacing_sn_length_change_value;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_length_change_form(pacing_window_structure);
				};
			};
		};
	pacing_sn_length_change_label_1: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Sn length");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_length_change_labe(pacing_window_structure);
				};
			};
		};
	pacing_sn_length_inc_dec_choice: XmOptionMenu
		{
		arguments
			{
			XmNlabelString =
			compound_string("");
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = 0;
			XmNleftWidget = XmLabel pacing_sn_length_change_label_1;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		controls
			{
			XmPulldownMenu
				{
				arguments
					{
					XmNborderWidth = 1;
					};
				controls
					{
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("increment");
							XmNfontList = button_font;
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								id_pacing_sn_length_increment_b(pacing_window_structure);
								};
							XmNactivateCallback = procedures
								{
								pacing_set_sn_length_increment(pacing_window_structure);
								};
							};
						};
					XmPushButtonGadget
						{
						arguments
							{
							XmNlabelString =
							compound_string("decrement");
							XmNfontList = button_font;
							};
						callbacks
							{
							MrmNcreateCallback = procedures
								{
								id_pacing_sn_length_decrement_b(pacing_window_structure);
								};
							XmNactivateCallback = procedures
								{
								pacing_set_sn_length_decrement(pacing_window_structure);
								};
							};
						};
					};
				};
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_length_inc_dec_cho(pacing_window_structure);
				};
			};
		};
	pacing_sn_length_change_label_2: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("(ms)");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmOptionMenu pacing_sn_length_inc_dec_choice;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		};
	pacing_sn_length_change_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_sn_length_change_label_2;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_length_change_valu(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_sn_length_change_valu(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_sn_length_change_valu(pacing_window_structure);
				};
			};
		};
	pacing_sn_length_factor_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_sn_length_change_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_sn_length_factor_label;
			XmTextField pacing_sn_length_factor_value;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_length_factor_form(pacing_window_structure);
				};
			};
		};
	pacing_sn_length_factor_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Sn length change factor");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_length_factor_labe(pacing_window_structure);
				};
			};
		};
	pacing_sn_length_factor_value: XmTextField
		{
		arguments
			{
			XmNcolumns = 8;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmLabel pacing_sn_length_factor_label;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_sn_length_factor_valu(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_sn_length_factor_valu(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_sn_length_factor_valu(pacing_window_structure);
				};
			};
		};
	pacing_pace_inc_dec_reset_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_sn_length_factor_form;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = widget_spacing;
			};
		controls
			{
			XmToggleButtonGadget pacing_restitution_time_pace;
			XmPushButtonGadget pacing_restitution_time_increme;
			XmPushButtonGadget pacing_restitution_time_decreme;
			XmPushButtonGadget pacing_restitution_time_repeat;
			XmPushButtonGadget pacing_restitution_time_reset;
			};
		};
	pacing_restitution_time_pace: XmToggleButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Pace");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_restitution_time_pace(pacing_window_structure);
				};
			XmNvalueChangedCallback = procedures
				{
				ch_pacing_restitution_time_pace(pacing_window_structure);
				};
			};
		};
	pacing_restitution_time_increme: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Increment");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmToggleButtonGadget pacing_restitution_time_pace;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_restitution_time_incr(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ac_pacing_restitution_time_incr(pacing_window_structure);
				};
			};
		};
	pacing_restitution_time_decreme: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Decrement");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmPushButtonGadget pacing_restitution_time_increme;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_restitution_time_decr(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ac_pacing_restitution_time_decr(pacing_window_structure);
				};
			};
		};
	pacing_restitution_time_repeat: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Repeat");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmPushButtonGadget pacing_restitution_time_decreme;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_restitution_time_repe(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ac_pacing_restitution_time_repe(pacing_window_structure);
				};
			};
		};
	pacing_restitution_time_reset: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Reset");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftOffset = widget_spacing;
			XmNleftWidget = XmPushButtonGadget pacing_restitution_time_repeat;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_restitution_time_rese(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ac_pacing_restitution_time_rese(pacing_window_structure);
				};
			};
		};
	pacing_restitution_time_separat: XmSeparator
		{
		arguments
			{
			XmNseparatorType = XmSINGLE_LINE;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_restitution_time_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	pacing_restitution_curve_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmSeparator pacing_restitution_time_separat;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = widget_spacing;
			};
		controls
			{
			XmLabel pacing_restitution_curve_label;
			XmForm pacing_decrement_threshold_form;
			XmToggleButtonGadget pacing_restitution_curve_pace;
			};
		};
	pacing_restitution_curve_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Restitution curve");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	pacing_decrement_threshold_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmLabel pacing_restitution_curve_label;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmLabel pacing_decrement_threshold_labe;
			XmTextField pacing_decrement_threshold_valu;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_decrement_threshold_f(pacing_window_structure);
				};
			};
		};
	pacing_decrement_threshold_labe: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("Decrement threshold pairs");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_END;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			};
		};
	pacing_decrement_threshold_valu: XmTextField
		{
		arguments
			{
			XmNcolumns = 40;
			XmNfontList = button_font;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset=0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmLabel pacing_decrement_threshold_labe;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_decrement_threshold_v(pacing_window_structure);
				};
			XmNactivateCallback = procedures
				{
				ch_pacing_decrement_threshold_v(pacing_window_structure);
				};
			XmNlosingFocusCallback = procedures
				{
				ch_pacing_decrement_threshold_v(pacing_window_structure);
				};
			};
		};
	pacing_restitution_curve_pace: XmToggleButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Pace");
			XmNfontList = button_font;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = widget_spacing;
			XmNtopWidget = XmForm pacing_decrement_threshold_form;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = widget_spacing;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				id_pacing_restitution_curve_pac(pacing_window_structure);
				};
			XmNvalueChangedCallback = procedures
				{
				ch_pacing_restitution_curve_pac(pacing_window_structure);
				};
			};
		};

end module;

