!*******************************************************************************
! FILE : element_point_viewer.uil
!
! LAST MODIFIED : 30 June 2000
!
! DESCRIPTION :
! Dialog for selecting an element point, viewing and editing its fields and
! applying changes.
!===============================================================================
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is cmgui part of cmiss.
 *
 * The Initial Developer of the Original Code is
 * Auckland Uniservices Ltd, Auckland, New Zealand.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
module element_point_viewer_module
	version = 'v1.0'

procedure
	elem_pt_v_id_element_form;
	elem_pt_v_id_top_element_form;
 	elem_pt_v_id_xi_disc_mode_form;
	elem_pt_v_id_disc_number_entry;
	elem_pt_v_id_disc_text;
	elem_pt_v_id_point_number_text;
	elem_pt_v_id_xi_text;
	elem_pt_v_id_grid_number_entry;
	elem_pt_v_id_grid_field_form;
	elem_pt_v_id_grid_value_text;
	elem_pt_v_id_viewer_form;
	elem_pt_v_id_apply_options_btn;
	elem_pt_v_id_apply_options;
	elem_pt_v_id_match_grid_btn;
	elem_pt_v_id_match_field_form;

	elem_pt_v_disc_text_CB;
	elem_pt_v_point_number_text_CB;
	elem_pt_v_xi_text_CB;
	elem_pt_v_grid_value_text_CB;
	elem_pt_v_apply_options_btn_CB;
	elem_pt_v_match_grid_btn_CB;
	elem_pt_v_apply_CB;
	elem_pt_v_apply_all_CB;
	elem_pt_v_revert_CB;
	elem_pt_v_close_CB;

identifier
	!Pointer to data specific to this instance of the elem_pt_v widget
	elem_pt_v_structure;
	!The gap between widgets
	widget_spacing;
	!fonts here
	normal_font;
	button_font;
	list_font;
	heading_font;

!******************************************************************************
object
	element_point_viewer: XmForm
	{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmForm elem_pt_v_apply_options_form;
			XmSeparatorGadget elem_pt_v_apply_separator;
			XmRowColumn elem_pt_v_select;
			XmFrame elem_pt_v_viewer_frame;
			XmRowColumn elem_pt_v_control;
			};
		};
!*******************************************************************************
	elem_pt_v_apply_options_form: XmForm
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
  		XmToggleButton elem_pt_v_apply_options_btn;
			XmRowColumn elem_pt_v_apply_options;
			};
		};
  elem_pt_v_apply_options_btn: XmToggleButton
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNlabelString = compound_string("Apply options");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure
				elem_pt_v_id_apply_options_btn(elem_pt_v_structure);
      XmNvalueChangedCallback = procedure
				elem_pt_v_apply_options_btn_CB(elem_pt_v_structure);
      };
    };
	elem_pt_v_apply_options: XmRowColumn
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget =  elem_pt_v_apply_options_btn;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmVERTICAL;
!			XmNnumColumns = 1;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
				XmSeparatorGadget{};
				XmRowColumn	elem_pt_v_match_grid_entry;
    	};
    callbacks
      {
      MrmNcreateCallback = procedure
				elem_pt_v_id_apply_options(elem_pt_v_structure);
      };
		};
  elem_pt_v_match_grid_entry: XmRowColumn
    {
		arguments
			{
!			XmNmarginHeight = 0;
!			XmNmarginWidth = 0;
!			XmNspacing = 0;
			XmNorientation = XmVERTICAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmToggleButton elem_pt_v_match_grid_btn;
      XmForm elem_pt_v_match_field_form;
      };
    };
  elem_pt_v_match_grid_btn: XmToggleButton
    {
    arguments
      {
      XmNlabelString = compound_string("Set all points with matching:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure
				elem_pt_v_id_match_grid_btn(elem_pt_v_structure);
      XmNvalueChangedCallback = procedure
				elem_pt_v_match_grid_btn_CB(elem_pt_v_structure);
      };
    };
	elem_pt_v_match_field_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				elem_pt_v_id_match_field_form(elem_pt_v_structure);
			};
		};
!*******************************************************************************
	elem_pt_v_apply_separator: XmSeparatorGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = elem_pt_v_apply_options_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
!*******************************************************************************
	elem_pt_v_select: XmRowColumn
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = elem_pt_v_apply_separator;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmVERTICAL;
!			XmNnumColumns = 1;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
			XmRowColumn elem_pt_v_element_entry;
			XmRowColumn elem_pt_v_top_element_entry;
			XmRowColumn elem_pt_v_xi_disc_mode_entry;
			XmRowColumn elem_pt_v_disc_number_entry;
			XmRowColumn elem_pt_v_xi_entry;
			XmSeparatorGadget{};
			XmRowColumn elem_pt_v_grid_field_entry;
			XmRowColumn elem_pt_v_grid_value_entry;
    	};
		};
!*******************************************************************************
  elem_pt_v_element_entry: XmRowColumn
    {
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabel elem_pt_v_element_label;
      XmForm elem_pt_v_element_form;
      };
    };
  elem_pt_v_element_label: XmLabel
    {
    arguments
      {
      XmNlabelString = compound_string("Element:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_pt_v_element_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				elem_pt_v_id_element_form(elem_pt_v_structure);
			};
		};
!*******************************************************************************
  elem_pt_v_top_element_entry: XmRowColumn
    {
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabel elem_pt_v_top_element_label;
      XmForm elem_pt_v_top_element_form;
      };
    };
  elem_pt_v_top_element_label: XmLabel
    {
    arguments
      {
      XmNlabelString = compound_string("Top-level element:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_pt_v_top_element_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				elem_pt_v_id_top_element_form(elem_pt_v_structure);
			};
		};
!*******************************************************************************
  elem_pt_v_xi_disc_mode_entry: XmRowColumn
    {
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabel elem_pt_v_xi_disc_mode_label;
      XmForm elem_pt_v_xi_disc_mode_form;
      };
    };
  elem_pt_v_xi_disc_mode_label: XmLabel
    {
    arguments
      {
      XmNlabelString = compound_string("Xi discretization mode:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_pt_v_xi_disc_mode_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				elem_pt_v_id_xi_disc_mode_form(elem_pt_v_structure);
			};
		};
!*******************************************************************************
  elem_pt_v_disc_number_entry: XmRowColumn
    {
		arguments
			{
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmVERTICAL;
!			XmNnumColumns = 1;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmRowColumn elem_pt_v_disc_entry;
      XmRowColumn elem_pt_v_point_number_entry;
      };
   callbacks
      {
      MrmNcreateCallback = procedure
				elem_pt_v_id_disc_number_entry(elem_pt_v_structure);
      };
    };
  elem_pt_v_disc_entry: XmRowColumn
    {
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabel elem_pt_v_disc_label;
      XmTextField elem_pt_v_disc_text;
      };
    };
  elem_pt_v_disc_label: XmLabel
    {
    arguments
      {
      XmNlabelString = compound_string("Discretization:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_pt_v_disc_text: XmTextField
		{
    arguments
      {
      XmNvalue = "";
!      XmNwidth = 80;
      XmNcolumns = 12;
      XmNfontList = normal_font;
      };
    callbacks
      {
			MrmNcreateCallback = procedure
				elem_pt_v_id_disc_text(elem_pt_v_structure);
      XmNactivateCallback = procedure
				elem_pt_v_disc_text_CB(elem_pt_v_structure);
      XmNlosingFocusCallback = procedure
				elem_pt_v_disc_text_CB(elem_pt_v_structure);
			};
		};
  elem_pt_v_point_number_entry: XmRowColumn
    {
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
    	XmLabel elem_pt_v_point_number_label;
      XmTextField elem_pt_v_point_number_text;
      };
    };
  elem_pt_v_point_number_label: XmLabel
    {
    arguments
      {
      XmNlabelString = compound_string("Point:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_pt_v_point_number_text: XmTextField
		{
    arguments
      {
      XmNvalue = "";
!      XmNwidth = 80;
      XmNcolumns = 12;
      XmNfontList = normal_font;
      };
    callbacks
      {
			MrmNcreateCallback = procedure
				elem_pt_v_id_point_number_text(elem_pt_v_structure);
      XmNactivateCallback = procedure
				elem_pt_v_point_number_text_CB(elem_pt_v_structure);
      XmNlosingFocusCallback = procedure
				elem_pt_v_point_number_text_CB(elem_pt_v_structure);
			};
		};
!*******************************************************************************
  elem_pt_v_xi_entry: XmRowColumn
    {
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabel elem_pt_v_xi_label;
      XmTextField elem_pt_v_xi_text;
      };
    };
  elem_pt_v_xi_label: XmLabel
    {
    arguments
      {
      XmNlabelString = compound_string("Xi:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_pt_v_xi_text: XmTextField
		{
    arguments
      {
      XmNvalue = "";
!      XmNwidth = 80;
      XmNcolumns = 24;
      XmNfontList = normal_font;
      };
    callbacks
      {
			MrmNcreateCallback = procedure elem_pt_v_id_xi_text(elem_pt_v_structure);
      XmNactivateCallback = procedure elem_pt_v_xi_text_CB(elem_pt_v_structure);
      XmNlosingFocusCallback = procedure
				elem_pt_v_xi_text_CB(elem_pt_v_structure);
			};
		};
!*******************************************************************************
  elem_pt_v_grid_number_entry: XmRowColumn
    {
		arguments
			{
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmVERTICAL;
!			XmNnumColumns = 1;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmRowColumn elem_pt_v_grid_field_entry;
      XmRowColumn elem_pt_v_grid_value_entry;
      };
   callbacks
      {
      MrmNcreateCallback = procedure
				elem_pt_v_id_grid_number_entry(elem_pt_v_structure);
      };
    };
  elem_pt_v_grid_field_entry: XmRowColumn
    {
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabel elem_pt_v_grid_field_label;
      XmForm elem_pt_v_grid_field_form;
      };
    };
  elem_pt_v_grid_field_label: XmLabel
    {
    arguments
      {
      XmNlabelString = compound_string("Grid field:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_pt_v_grid_field_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				elem_pt_v_id_grid_field_form(elem_pt_v_structure);
			};
		};
  elem_pt_v_grid_value_entry: XmRowColumn
    {
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabel elem_pt_v_grid_value_label;
      XmTextField elem_pt_v_grid_value_text;
      };
    };
  elem_pt_v_grid_value_label: XmLabel
    {
    arguments
      {
      XmNlabelString = compound_string("Grid value:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_pt_v_grid_value_text: XmTextField
		{
    arguments
      {
      XmNvalue = "";
!      XmNwidth = 80;
      XmNcolumns = 12;
      XmNfontList = normal_font;
      };
    callbacks
      {
			MrmNcreateCallback = procedure
				elem_pt_v_id_grid_value_text(elem_pt_v_structure);
      XmNactivateCallback = procedure
				elem_pt_v_grid_value_text_CB(elem_pt_v_structure);
      XmNlosingFocusCallback = procedure
				elem_pt_v_grid_value_text_CB(elem_pt_v_structure);
			};
		};
!*******************************************************************************
	elem_pt_v_viewer_frame: XmFrame
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = elem_pt_v_select;
			XmNbottomAttachment = XmATTACH_WIDGET;
			XmNbottomWidget = elem_pt_v_control;
      };
    controls
      {
      XmForm elem_pt_v_viewer_form;
      };
    };
	elem_pt_v_viewer_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				elem_pt_v_id_viewer_form(elem_pt_v_structure);
			};
		};
!*******************************************************************************
	elem_pt_v_control: XmRowColumn
		{
		arguments
			{
			XmNpacking = XmPACK_COLUMN;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_NONE;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNentryAlignment = XmALIGNMENT_CENTER;
			};
		controls
			{
			XmPushButton elem_pt_v_control_apply;
			XmPushButton elem_pt_v_control_apply_all;
			XmPushButton elem_pt_v_control_revert;
			XmPushButton elem_pt_v_control_close;
			};
		};
	elem_pt_v_control_apply: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Apply");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedure elem_pt_v_apply_CB(elem_pt_v_structure);
			};
		};
	elem_pt_v_control_apply_all: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Apply All");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback =
				procedure elem_pt_v_apply_all_CB(elem_pt_v_structure);
			};
		};
	elem_pt_v_control_revert: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Revert");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback =
				procedure elem_pt_v_revert_CB(elem_pt_v_structure);
			};
		};
	elem_pt_v_control_close: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Close");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback =
				procedure elem_pt_v_close_CB(elem_pt_v_structure);
			};
		};
!*******************************************************************************
end module;
