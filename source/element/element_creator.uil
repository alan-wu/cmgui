!*******************************************************************************
! FILE : element_creator.uil
!
! LAST MODIFIED : 10 January 2003
!
! DESCRIPTION :
! Controls the elements being created.
!===============================================================================
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is cmgui part of cmiss.
 *
 * The Initial Developer of the Original Code is
 * Auckland Uniservices Ltd, Auckland, New Zealand.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
module element_creator_module
	version = 'v1.0'

procedure
	elem_cre_id_create_btn;
	elem_cre_id_region_form;
	elem_cre_id_dimension_text;
	elem_cre_id_coord_field_form;
	elem_cre_id_node_list;

	elem_cre_create_btn_CB;
	elem_cre_dimension_text_CB;
	elem_cre_abort_creation_CB;

identifier
	!Pointer to data specific to this instance of the elem_cre widget
	elem_cre_structure;
	!The gap between widgets
	widget_spacing;
	!fonts here
	normal_font;
	button_font;
	list_font;
	heading_font;

!******************************************************************************
object
	element_creator: XmForm
	{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmRowColumn elem_cre_controls;
			XmFrame elem_cre_progress_entry;
			XmPushButtonGadget elem_cre_abort_creation;
			};
		};
!*******************************************************************************
	elem_cre_controls: XmRowColumn
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmVERTICAL;
!			XmNnumColumns = 1;
			XmNpacking = XmPACK_TIGHT;
			};
		controls
			{
  		XmToggleButtonGadget elem_cre_create_btn;
			XmRowColumn elem_cre_region_entry;
			XmRowColumn elem_cre_dimension_entry;
			XmRowColumn elem_cre_coord_field_entry;
			};
		};
!*******************************************************************************
  elem_cre_create_btn: XmToggleButtonGadget
    {
    arguments
      {
      XmNlabelString = compound_string("Create elements");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure elem_cre_id_create_btn(elem_cre_structure);
      XmNvalueChangedCallback = procedure
				elem_cre_create_btn_CB(elem_cre_structure);
      };
    };
!*******************************************************************************
  elem_cre_region_entry: XmRowColumn
    {
		arguments
			{
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabelGadget elem_cre_region_label;
      XmForm elem_cre_region_form;
      };
    };
  elem_cre_region_label: XmLabelGadget
    {
    arguments
      {
      XmNlabelString = compound_string("Put in region:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_cre_region_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				elem_cre_id_region_form(elem_cre_structure);
			};
		};
!*******************************************************************************
  elem_cre_dimension_entry: XmRowColumn
    {
		arguments
			{
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabelGadget elem_cre_dimension_label;
      XmTextField elem_cre_dimension_text;
      };
    };
  elem_cre_dimension_label: XmLabelGadget
    {
    arguments
      {
      XmNlabelString = compound_string("Dimension:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_cre_dimension_text: XmTextField
		{
    arguments
      {
      XmNvalue = "";
!      XmNwidth = 80;
      XmNcolumns = 12;
      XmNfontList = normal_font;
      };
    callbacks
      {
			MrmNcreateCallback = procedure
				elem_cre_id_dimension_text(elem_cre_structure);
      XmNactivateCallback = procedure
				elem_cre_dimension_text_CB(elem_cre_structure);
      XmNlosingFocusCallback = procedure
				elem_cre_dimension_text_CB(elem_cre_structure);
			};
		};
!*******************************************************************************
  elem_cre_coord_field_entry: XmRowColumn
    {
		arguments
			{
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabelGadget elem_cre_coord_field_label;
      XmForm elem_cre_coord_field_form;
      };
    };
  elem_cre_coord_field_label: XmLabelGadget
    {
    arguments
      {
      XmNlabelString = compound_string("Coordinate field:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	elem_cre_coord_field_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				elem_cre_id_coord_field_form(elem_cre_structure);
			};
		};
!*******************************************************************************
	elem_cre_progress_entry: XmFrame
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = elem_cre_controls;
			XmNbottomAttachment = XmATTACH_WIDGET;
			XmNbottomWidget = elem_cre_abort_creation;
			};
    controls
      {
      XmForm elem_cre_progress_form;
      };
		};
	elem_cre_progress_form: XmForm
		{
    controls
      {
			XmLabelGadget elem_cre_element_name;
      XmList elem_cre_node_list;
      };
		};
	elem_cre_element_name: XmLabelGadget
		{
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNlabelString = compound_string("Nodes in new element:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
		};
	elem_cre_node_list: XmList
		{
		arguments
			{
			XmNvisibleItemCount = 4;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = elem_cre_element_name;
			XmNbottomAttachment = XmATTACH_FORM;
			};
    callbacks
      {
			MrmNcreateCallback = procedure
				elem_cre_id_node_list(elem_cre_structure);
			};
		};
!*******************************************************************************
	elem_cre_abort_creation: XmPushButtonGadget
		{
		arguments
			{
      XmNfontList = button_font;
      XmNlabelString = compound_string("Abort element creation");
      XmNalignment = XmALIGNMENT_CENTER;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_NONE;
			XmNbottomAttachment = XmATTACH_FORM;
			};
    callbacks
      {
			XmNactivateCallback = procedure
				elem_cre_abort_creation_CB(elem_cre_structure);
			};
		};
!*******************************************************************************
end module;
