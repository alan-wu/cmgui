!*******************************************************************************
! FILE : node_tool.uil
!
! LAST MODIFIED : 4 July 2002
!
! DESCRIPTION :
! Node/data tool icons with dialog widgets for controlling settings.
!===============================================================================
module node_tool_module
	version = 'v1.0'

procedure
	node_tool_id_select_btn;
	node_tool_id_edit_btn;
	node_tool_id_motion_update_btn;
	node_tool_id_define_btn;
	node_tool_id_coord_field_form;
	node_tool_id_create_btn;
	node_tool_id_streaming_btn;
	node_tool_id_url_field_btn;
	node_tool_id_url_field_form;
	node_tool_id_node_group_form;

	node_tool_select_btn_CB;
	node_tool_edit_btn_CB;
	node_tool_motion_update_btn_CB;
	node_tool_define_btn_CB;
	node_tool_create_btn_CB;
	node_tool_streaming_btn_CB;
	node_tool_url_field_btn_CB;
	node_tool_destroy_selected_CB;
	node_tool_undefine_selected_CB;

identifier
	!Pointer to data specific to this instance of the node_tool widget
	node_tool_structure;
	!The gap between widgets
	widget_spacing;
	!fonts here
	normal_font;
	button_font;
	list_font;
	heading_font;

value
	black  : color('black',  foreground);
	blue   : color('blue',   foreground);
	green  : color('green',  foreground);
	red    : color('red',    foreground);
	white  : color('white',  foreground);
	yellow : color('yellow', foreground);
	lightgray : color('lightgray', foreground);
	darkgray  : color('darkgray', foreground);
	interactive_tool_colour_table:
		color_table(
		black='o',
		red='R',
		yellow='Y',
		green='G',
		white='W',
		lightgray='+',
		darkgray='#',
		foreground color='.',
		background color=' ');

	data_tool_icon: icon(color_table=interactive_tool_colour_table,
			'                                ',
			'                                ',
			'   .   .                        ',
			'    . .                         ',
			'     .                .   .     ',
			'    . .     .   .      . .      ',
			'   .   .   .R. .R.      .       ',
			'            .R.R.      . .      ',
			'             .        .   .     ',
			'            .R .                ',
			'           .R. ..               ',
			'            .  ...              ',
			'               ....             ',
			'               .....     .   .  ',
			'               ......     . .   ',
			'               .......     .    ',
			'     .   .     ........   . .   ',
			'      . .      .....     .   .  ',
			'       .       .. ..            ',
			'      . .      .   ..           ',
			'     .   .         ..           ',
			'                    ..          ',
			'                    ..          ',
			'                                ',
			'                  .             ',
			'       ....       .             ',
			'       .   . ..  ... ..         ',
			'       .   .   .  .    .        ',
			'       .   . ...  .  ...        ',
			'       .   . . .  .  . .        ',
			'       ....  .. . .  .. .       ',
			'                                ');

	node_tool_icon: icon(color_table=interactive_tool_colour_table,
			'              ...               ',
			'              ...               ',
			'            . ... .             ',
			'          .         .           ',
			'     ....             ....      ',
			'     ...               ...      ',
			'     ... .    ...    . ...      ',
			'           . .RRR. .            ',
			'      .      .R  .      .       ',
			'             .R .               ',
			'      .       . ..      .       ',
			'                ...             ',
			'      .         ....    .       ',
			'                .....           ',
			'     ...        ...... ...      ',
			'     ...        ....... ..      ',
			'     ....       ........ .      ',
			'          .     .....           ',
			'            . . .. ..           ',
			'              . .   ..          ',
			'              .     ..          ',
			'                     ..         ',
			'                     ..         ',
			'                                ',
			'                     .          ',
			'       .   .         .          ',
			'       ..  .  ..   ...  .       ',
			'       . . . .  . .  . . .      ',
			'       . . . .  . .  . ...      ',
			'       .  .. .  . .  . .        ',
			'       .   .  ..   ...  ..      ',
			'                                ');


object
!******************************************************************************
	node_tool: XmForm
	{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			};
		controls
			{
  		XmToggleButtonGadget node_tool_select_btn;
  		XmToggleButtonGadget node_tool_edit_btn;
  		XmToggleButtonGadget node_tool_motion_update_btn;
  		XmToggleButtonGadget node_tool_define_btn;
			XmRowColumn node_tool_coord_field_entry;
  		XmToggleButtonGadget node_tool_create_btn;
  		XmToggleButtonGadget node_tool_streaming_btn;
			XmRowColumn node_tool_url_field_entry;
			XmRowColumn node_tool_node_group_entry;
			XmSeparatorGadget node_tool_separator1;
			XmPushButtonGadget node_tool_destroy_selected_btn;
			XmPushButtonGadget node_tool_undefine_selected_btn;
			};
		};
!*******************************************************************************
  node_tool_select_btn: XmToggleButtonGadget
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNlabelString = compound_string("Select");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure
				node_tool_id_select_btn(node_tool_structure);
      XmNvalueChangedCallback = procedure
				node_tool_select_btn_CB(node_tool_structure);
      };
    };
!*******************************************************************************
  node_tool_edit_btn: XmToggleButtonGadget
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_select_btn;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNlabelString = compound_string("Edit");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure
				node_tool_id_edit_btn(node_tool_structure);
      XmNvalueChangedCallback = procedure
				node_tool_edit_btn_CB(node_tool_structure);
      };
    };
!*******************************************************************************
  node_tool_motion_update_btn: XmToggleButtonGadget
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_edit_btn;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNlabelString = compound_string("Motion update during edit");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure
				node_tool_id_motion_update_btn(node_tool_structure);
      XmNvalueChangedCallback = procedure
				node_tool_motion_update_btn_CB(node_tool_structure);
      };
    };
!*******************************************************************************
  node_tool_define_btn: XmToggleButtonGadget
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_motion_update_btn;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNlabelString = compound_string("Define");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure
				node_tool_id_define_btn(node_tool_structure);
      XmNvalueChangedCallback = procedure
				node_tool_define_btn_CB(node_tool_structure);
      };
    };
!*******************************************************************************
  node_tool_create_btn: XmToggleButtonGadget
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_define_btn;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNlabelString = compound_string("Create (with Define)");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure
				node_tool_id_create_btn(node_tool_structure);
      XmNvalueChangedCallback = procedure
				node_tool_create_btn_CB(node_tool_structure);
      };
    };
!*******************************************************************************
  node_tool_streaming_btn: XmToggleButtonGadget
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_create_btn;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNlabelString = compound_string("Streaming create");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    callbacks
      {
      MrmNcreateCallback = procedure
				node_tool_id_streaming_btn(node_tool_structure);
      XmNvalueChangedCallback = procedure
				node_tool_streaming_btn_CB(node_tool_structure);
      };
    };
!*******************************************************************************
  node_tool_coord_field_entry: XmRowColumn
    {
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_streaming_btn;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabelGadget node_tool_coord_field_label;
      XmForm node_tool_coord_field_form;
      };
    };
  node_tool_coord_field_label: XmLabelGadget
    {
    arguments
      {
      XmNlabelString = compound_string("Coordinate field:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	node_tool_coord_field_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				node_tool_id_coord_field_form(node_tool_structure);
			};
		};
!*******************************************************************************
  node_tool_node_group_entry: XmRowColumn
    {
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_coord_field_entry;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabelGadget node_tool_node_group_label;
      XmForm node_tool_node_group_form;
      };
    };
  node_tool_node_group_label: XmLabelGadget
    {
    arguments
      {
      XmNlabelString = compound_string("Put in group:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
    };
	node_tool_node_group_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				node_tool_id_node_group_form(node_tool_structure);
			};
		};
!*******************************************************************************
  node_tool_url_field_entry: XmRowColumn
    {
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_node_group_entry;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmToggleButtonGadget node_tool_url_field_btn;
      XmForm node_tool_url_field_form;
      };
    };
  node_tool_url_field_btn: XmToggleButtonGadget
    {
    arguments
      {
      XmNlabelString = compound_string("URL field:");
      XmNalignment = XmALIGNMENT_BEGINNING;
      XmNfontList = button_font;
      };
		callbacks
			{
			MrmNcreateCallback = procedure
				node_tool_id_url_field_btn(node_tool_structure);
      XmNvalueChangedCallback = procedure
				node_tool_url_field_btn_CB(node_tool_structure);
			};
    };
	node_tool_url_field_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				node_tool_id_url_field_form(node_tool_structure);
			};
		};
!*******************************************************************************
	node_tool_separator1: XmSeparatorGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_url_field_entry;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
!*******************************************************************************
	node_tool_destroy_selected_btn: XmPushButtonGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_separator1;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNfontList = button_font;
      XmNlabelString = compound_string("Destroy selected nodes");
      XmNalignment = XmALIGNMENT_CENTER;
			};
    callbacks
      {
			XmNactivateCallback = procedure
				node_tool_destroy_selected_CB(node_tool_structure);
			};
		};
!*******************************************************************************
	node_tool_undefine_selected_btn: XmPushButtonGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_tool_destroy_selected_btn;
			XmNbottomAttachment = XmATTACH_NONE;
      XmNfontList = button_font;
      XmNlabelString = compound_string("Undefine field in selected nodes");
      XmNalignment = XmALIGNMENT_CENTER;
			};
    callbacks
      {
			XmNactivateCallback = procedure
				node_tool_undefine_selected_CB(node_tool_structure);
			};
		};
!*******************************************************************************
	data_tool_button: XmToggleButton
		{
		arguments
			{
			XmNlabelType = XmPIXMAP;
			XmNlabelPixmap = data_tool_icon;
			XmNindicatorOn = false;
			XmNhighlightThickness = 0;
			XmNset = false;
			XmNspacing = 0;
			XmNshadowThickness = 2;
			};
		};
	node_tool_button: XmToggleButton
		{
		arguments
			{
			XmNlabelType = XmPIXMAP;
			XmNlabelPixmap = node_tool_icon;
			XmNindicatorOn = false;
			XmNhighlightThickness = 0;
			XmNset = false;
			XmNspacing = 0;
			XmNshadowThickness = 2;
			};
		};
!*******************************************************************************
end module;

