!*******************************************************************************
! FILE : node_viewer.uil
!
! LAST MODIFIED : 11 May 2000
!
! DESCRIPTION :
! Dialog for selecting a node, viewing and editing its fields and applying
! changes.
!===============================================================================
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is cmgui part of cmiss.
 *
 * The Initial Developer of the Original Code is
 * Auckland Uniservices Ltd, Auckland, New Zealand.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
module node_viewer_module
	version = 'v1.0'

procedure
	node_viewer_id_select_form;
	node_viewer_id_viewer_form;
	node_viewer_ok_CB;
	node_viewer_apply_CB;
	node_viewer_revert_CB;
	node_viewer_cancel_CB;

identifier
	!Pointer to data specific to this instance of the node_viewer widget
	node_viewer_structure;
	!The gap between widgets
	widget_spacing;
	!fonts here
	normal_font;
	button_font;
	list_font;
	heading_font;

!******************************************************************************
object
	node_viewer: XmForm
	{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmForm node_viewer_select_form;
			XmFrame node_viewer_viewer_frame;
			XmRowColumn node_viewer_control;
			};
		};
!*******************************************************************************
	node_viewer_select_form: XmForm
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				node_viewer_id_select_form(node_viewer_structure);
			};
		};
!*******************************************************************************
	node_viewer_viewer_frame: XmFrame
    {
    arguments
      {
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = node_viewer_select_form;
			XmNbottomAttachment = XmATTACH_WIDGET;
			XmNbottomWidget = node_viewer_control;
      };
    controls
      {
      XmForm node_viewer_viewer_form;
      };
    };
	node_viewer_viewer_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				node_viewer_id_viewer_form(node_viewer_structure);
			};
		};
!*******************************************************************************
	node_viewer_control: XmRowColumn
		{
		arguments
			{
			XmNpacking = XmPACK_COLUMN;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_NONE;
			XmNbottomAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmPushButtonGadget node_viewer_control_ok;
			XmPushButtonGadget node_viewer_control_apply;
			XmPushButtonGadget node_viewer_control_revert;
			XmPushButtonGadget node_viewer_control_cancel;
			};
		};
	node_viewer_control_ok: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("OK");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedure node_viewer_ok_CB(node_viewer_structure);
			};
		};
	node_viewer_control_apply: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Apply");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback =
				procedure node_viewer_apply_CB(node_viewer_structure);
			};
		};
	node_viewer_control_revert: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Revert");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback =
				procedure node_viewer_revert_CB(node_viewer_structure);
			};
		};
	node_viewer_control_cancel: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Cancel");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback =
				procedure node_viewer_cancel_CB(node_viewer_structure);
			};
		};
!*******************************************************************************
end module;
