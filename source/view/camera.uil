!*******************************************************************************
! FILE : camera.uil
!
! LAST MODIFIED : 2 February 1995
!
! DESCRIPTION :
! The widgets for the camera camera widget.
!===============================================================================
module camera
	version = 'v1.0'

procedure
	camera_identify_button    (integer);
	camera_destroy_CB          ();

value
	shadow_size        : 2;

value
	camera_font              : font_table(font('-*-HELVETICA-MEDIUM-R-*--*-80-*-*-*-*-ISO8859-1'));
	camera_font_large        : font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
	camera_font_bold        : font_table(font('-*-HELVETICA-BOLD-R-*--*-80-*-*-*-*-ISO8859-1'));

identifier
	!The gap between widgets
	widget_spacing;
	!Pointer to data specific to this instance of the camera widget
	Camera_structure;
	!value identifier
	camera_menu_ID;
	camera_pos_form_ID;
	camera_dir_form_ID;
	camera_coord_ID;
	camera_pos_menu_ID;
	camera_dir_menu_ID;

!**************************************************************************************
!**************************************************************************************
! The camera widget
object
	camera_widget: XmForm
	{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Camera_structure;
			};
		controls
			{
			XmForm camera_menu_form;
			XmForm camera_dof3_form;
			};
		callbacks
			{
			XmNdestroyCallback = procedure camera_destroy_CB ();
			};
		};
	camera_dof3_pos_frame: XmFrame
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_POSITION;
			XmNbottomOffset = 0;
			XmNbottomPosition = 50;
			XmNuserData = Camera_structure;
			};
		controls
			{
			XmForm camera_dof3_pos_form;
			};
		};
	camera_dof3_dir_frame: XmFrame
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_POSITION;
			XmNtopOffset = 0;
			XmNtopPosition = 50;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Camera_structure;
			};
		controls
			{
			XmForm camera_dof3_dir_form;
			};
		};
!**************************************************************************************
	camera_menu_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNuserData = Camera_structure;
			};
		controls
			{
			XmForm camera_coord_form;
			XmMenuBar camera_menu;
			};
		};
	camera_coord_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
!      XmNleftAttachment = XmATTACH_WIDGET;
!      XmNleftOffset = 0;
!      XmNleftWidget = XmMenuBar camera_menu;
			XmNleftAttachment = XmATTACH_NONE;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Camera_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure camera_identify_button (camera_coord_ID);
			};
		};
	camera_menu: XmMenuBar
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNrightOffset = 0;
!      XmNrightAttachment = XmATTACH_WIDGET;
!      XmNrightOffset = 0;
!      XmNrightWidget = XmForm camera_coord_form;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNisHomogeneous = false;
			XmNuserData = Camera_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure camera_identify_button (camera_menu_ID);
			};
		};
	camera_dof3_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmForm camera_menu_form;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNfractionBase = 100;
			XmNuserData = Camera_structure;
			};
		controls
			{
			XmFrame camera_dof3_pos_frame;
			XmFrame camera_dof3_dir_frame;
			};
		};
	camera_dof3_pos_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNuserData = Camera_structure;
			};
		controls
			{
			XmLabelGadget camera_pos_name;
			XmMenuBar camera_pos_menu;
			XmForm camera_pos_form;
			};
		};
	camera_pos_name: XmLabelGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Eye position:");
			XmNfontList = camera_font_large;
			XmNshadowThickness = shadow_size;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNuserData = Camera_structure;
			};
		};
	camera_pos_menu: XmMenuBar
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmLabelGadget camera_pos_name;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNisHomogeneous = false;
			XmNuserData = Camera_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure camera_identify_button (camera_pos_menu_ID);
			};
		};
	camera_pos_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmMenuBar camera_pos_menu;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Camera_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure camera_identify_button (camera_pos_form_ID);
			};
		};
	camera_dof3_dir_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNuserData = Camera_structure;
			};
		controls
			{
			XmLabelGadget camera_dir_name;
			XmMenuBar camera_dir_menu;
			XmForm camera_dir_form;
			};
		};
	camera_dir_name: XmLabelGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Viewing direction:");
			XmNfontList = camera_font_large;
			XmNshadowThickness = shadow_size;
			XmNhighlightThickness = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNuserData = Camera_structure;
			};
		};
	camera_dir_menu: XmMenuBar
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmLabelGadget camera_dir_name;
			XmNbottomAttachment = XmATTACH_NONE;
			XmNbottomOffset = 0;
			XmNisHomogeneous = false;
			XmNuserData = Camera_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure camera_identify_button (camera_dir_menu_ID);
			};
		};
	camera_dir_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopOffset = 0;
			XmNtopWidget = XmMenuBar camera_dir_menu;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = Camera_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure camera_identify_button (camera_dir_form_ID);
			};
		};
end module;
!**************************************************************************************
