!*******************************************************************************
!FILE : filedir.uil
!
!LAST MODIFIED : 9 June 2003
!
!DESCRIPTION :
!The widgets/gadgets used for specifying files to open.
!===============================================================================
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is cmgui part of cmiss.
 *
 * The Initial Developer of the Original Code is
 * Auckland Uniservices Ltd, Auckland, New Zealand.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
module filedir
	names = case_sensitive

procedure
	identify_file_selection_label;
	identify_file_selection_text;
	file_selection_write;
	cancel_file_selection;

identifier
	widget_spacing;
	file_open_data;

object
	file_selection_box: XmFileSelectionBox
		{
		arguments
			{
			XmNapplyLabelString =
			compound_string("Change directory");
			XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
			};
		};
	file_selection_form: XmForm
		{
		arguments
			{
			XmNborderWidth = 1;
			XmNallowOverlap = false;
			XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
			};
		controls
			{
			XmLabel file_selection_label;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmLabel file_selection_label;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmText file_selection_text;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftWidget = XmText file_selection_text;
					XmNleftOffset = 0;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_NONE;
					XmNbottomAttachment = XmATTACH_NONE;
					};
				};
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_FORM;
					XmNleftOffset = widget_spacing;
					XmNrightAttachment = XmATTACH_FORM;
					XmNrightOffset = widget_spacing;
					XmNtopAttachment = XmATTACH_WIDGET;
					XmNtopWidget = XmText file_selection_text;
					XmNtopOffset = widget_spacing;
					XmNbottomAttachment = XmATTACH_WIDGET;
					XmNbottomWidget = XmForm file_selection_ok_cancel;
					XmNbottomOffset = widget_spacing;
					};
				};
			XmForm file_selection_ok_cancel;
			};
		};
	file_selection_label: XmLabel
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_file_selection_label(file_open_data);
				};
			};
		};
	file_selection_text: XmText
		{
		arguments
			{
			XmNmaxLength = 20;
			XmNcolumns = 20;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = XmLabel file_selection_label;
			XmNtopOffset = widget_spacing;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_file_selection_text(file_open_data);
				};
			XmNactivateCallback = procedures
				{
				file_selection_write(file_open_data);
				};
			};
		};
	file_selection_ok_cancel: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNallowOverlap = false;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = widget_spacing;
			XmNtopAttachment = XmATTACH_NONE;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = widget_spacing;
			};
		controls
			{
			XmPushButton file_selection_ok_button;
			XmSeparator
				{
				arguments
					{
					XmNseparatorType = XmNO_LINE;
					XmNleftAttachment = XmATTACH_WIDGET;
					XmNleftOffset = widget_spacing;
					XmNleftWidget = XmPushButton file_selection_ok_button;
					XmNrightAttachment = XmATTACH_WIDGET;
					XmNrightOffset = widget_spacing;
					XmNrightWidget = XmPushButton file_selection_cancel_button;
					XmNtopAttachment = XmATTACH_FORM;
					XmNtopOffset = 0;
					XmNbottomAttachment = XmATTACH_FORM;
					XmNbottomOffset = 0;
					};
				};
			XmPushButton file_selection_cancel_button;
			};
		};
	file_selection_ok_button: XmPushButton
		{
		arguments
			{
			XmNlabelString =
			compound_string("OK");
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				file_selection_write(file_open_data);
				};
			};
		};
	file_selection_cancel_button: XmPushButton
		{
		arguments
			{
			XmNlabelString =
			compound_string("Cancel");
			XmNleftAttachment = XmATTACH_NONE;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				cancel_file_selection(file_open_data);
				};
			};
		};
	file_exists_warning_box: XmMessageBox
		{
		arguments
			{
			XmNmessageString = compound_string("File already exists.  Overwrite ?");
			XmNdialogType = XmDIALOG_WARNING;
			XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
			};
		};
end module;
