!*******************************************************************************
! FILE : graphical_element_editor.uil
!
! LAST MODIFIED : 3 December 2001
!
! DESCRIPTION :
! The widgets for the graphical element group editor widget.
!===============================================================================
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is cmgui part of cmiss.
 *
 * The Initial Developer of the Original Code is
 * Auckland Uniservices Ltd, Auckland, New Zealand.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
module gelem_ed
	version = 'v1.0'

procedure
! ---------|---------|---------|- 31 characters max
	gelem_ed_destroy_CB;
	gelem_ed_id_general_btn;
	gelem_ed_id_general_rc;
	gelem_ed_id_def_coord_form;
	gelem_ed_id_element_disc_text;
	gelem_ed_id_circle_disc_text;
	gelem_ed_id_native_disc_btn;
	gelem_ed_id_native_disc_form;
	gelem_ed_id_settings_type_form;
	gelem_ed_id_add_btn;
	gelem_ed_id_delete_btn;
	gelem_ed_id_up_btn;
	gelem_ed_id_down_btn;
	gelem_ed_id_settings_scr;
	gelem_ed_id_settings_list_form;
	gelem_ed_id_settings_form;
	gelem_ed_general_btn_CB;
	gelem_ed_element_disc_text_CB;
	gelem_ed_circle_disc_text_CB;
	gelem_ed_native_disc_btn_CB;
	gelem_ed_add_btn_CB;
	gelem_ed_delete_btn_CB;
	gelem_ed_up_btn_CB;
	gelem_ed_down_btn_CB;

value
	sash_width : 50;

identifier
	!Pointer to data specific to this instance of the gelem_ed widget
	gelem_ed_structure;
	!fonts here
	normal_font;

! The gelem_ed widget
object
	gelem_ed_widget: XmForm
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNuserData = gelem_ed_structure;
			};
		controls
			{
			XmForm gelem_ed_general_set_form;
			XmSeparatorGadget gelem_ed_separator;
			XmForm gelem_ed_specific_set_form;
			};
		callbacks
			{
			XmNdestroyCallback = procedure gelem_ed_destroy_CB(gelem_ed_structure);
			};
		};
	gelem_ed_general_set_form: XmForm
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmForm gelem_ed_general_btn_form;
			XmRowColumn gelem_ed_general_rc;
			};
		};
	gelem_ed_separator: XmSeparatorGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = gelem_ed_general_set_form;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		};
	gelem_ed_specific_set_form: XmForm
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
!			XmNtopAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = gelem_ed_separator;
			XmNbottomAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmPanedWindow gelem_ed_specific_set_pw;
			};
		};
	gelem_ed_specific_set_pw: XmPanedWindow
		{
		arguments
			{
			XmNsashWidth = sash_width;
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmForm gelem_ed_sett_type_list_form;
			XmForm gelem_ed_settings_form;
			};
		};
	gelem_ed_sett_type_list_form: XmForm
		{
    arguments
      {
      XmNallowResize = true;
      };
		controls
			{
			XmForm gelem_ed_type_modify_form;
			XmScrolledWindow gelem_ed_settings_scroll;
			};
		};
	gelem_ed_settings_form: XmForm
		{
    arguments
      {
      XmNallowResize = true;
      };
		callbacks
			{
			MrmNcreateCallback = procedure
				gelem_ed_id_settings_form(gelem_ed_structure);
			};
		};
!*******************************************************************************
	gelem_ed_type_modify_form: XmForm
		{
		arguments
			{
!Uncomment the following to reduce size of rowcolumn.
!			XmNmarginHeight = 0;
!			XmNmarginWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_NONE;
			};
		controls
			{
			XmForm gelem_ed_settings_type_form;
			XmPushButtonGadget gelem_ed_add_btn;
			XmPushButtonGadget gelem_ed_delete_btn;
			XmPushButtonGadget gelem_ed_up_btn;
			XmPushButtonGadget gelem_ed_down_btn;
			};
		};
	gelem_ed_settings_scroll: XmScrolledWindow
		{
		arguments
			{
!			XmNheight = 186;
!			XmNwidth = 300;
			XmNscrollingPolicy = XmAUTOMATIC;
!???RC temp:
			XmNvisualPolicy = XmVARIABLE;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = gelem_ed_type_modify_form;
			XmNbottomAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmForm gelem_ed_settings_list_form;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				gelem_ed_id_settings_scr(gelem_ed_structure);
			};
		};
	gelem_ed_settings_list_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback = procedure
				gelem_ed_id_settings_list_form(gelem_ed_structure);
			};
		};
!*******************************************************************************
	gelem_ed_general_btn_form: XmForm
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			};
		controls
			{
			XmPushButton gelem_ed_general_btn;
			XmLabel gelem_ed_general_label;
			};
		};
	gelem_ed_general_btn: XmPushButton
		{
		arguments
			{
			XmNshadowThickness = 1;
			XmNborderWidth = 0;
			XmNmarginHeight = 0;
			XmNmarginWidth = 3;
			XmNlabelString = compound_string("+");
			XmNfontList = normal_font;
			XmNleftAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				gelem_ed_id_general_btn(gelem_ed_structure);
			XmNactivateCallback = procedure
				gelem_ed_general_btn_CB(gelem_ed_structure);
			};
		};
	gelem_ed_general_label: XmLabel
		{
		arguments
			{
			XmNlabelString = compound_string("General settings:");
			XmNfontList = normal_font;
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftWidget = gelem_ed_general_btn;
			XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
			XmNbottomWidget = gelem_ed_general_btn;
			};
		};
	gelem_ed_general_rc: XmRowColumn
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_WIDGET;
			XmNtopWidget = gelem_ed_general_btn;
			XmNbottomAttachment = XmATTACH_NONE;
!Uncomment the following to reduce size of rowcolumn.
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmVERTICAL;
			XmNpacking = XmPACK_TIGHT;
!			XmNnumColumns = 1;
			};
		controls
			{
			XmRowColumn gelem_ed_def_coord_entry;
			XmForm gelem_ed_element_disc_entry;
			XmForm gelem_ed_circle_disc_entry;
			XmRowColumn gelem_ed_native_disc_entry;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				gelem_ed_id_general_rc(gelem_ed_structure);
			};
		};
	gelem_ed_def_coord_entry: XmRowColumn
    {
		arguments
			{
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmLabelGadget gelem_ed_def_coord_label;
      XmForm gelem_ed_def_coord_form;
      };
    };
	gelem_ed_def_coord_label: XmLabelGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Default coordinate field:");
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNfontList = normal_font;
			};
		};
	gelem_ed_def_coord_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback =
				procedure gelem_ed_id_def_coord_form(gelem_ed_structure);
			};
		};
	gelem_ed_element_disc_entry: XmForm
		{
		controls
			{
			XmLabelGadget gelem_ed_element_disc_label;
			XmTextField gelem_ed_element_disc_text;
			};
		};
	gelem_ed_element_disc_label: XmLabelGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Element discretization:");
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNfontList = normal_font;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNuserData = gelem_ed_structure;
			};
		};
	gelem_ed_element_disc_text: XmTextField
		{
		arguments
			{
!      XmNcolumns = 8;
			XmNvalue = "";
			XmNmarginHeight = 2;
			XmNmarginWidth = 2;
			XmNfontList = normal_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftWidget = gelem_ed_element_disc_label;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNuserData = gelem_ed_structure;
			};
		callbacks
			{
			MrmNcreateCallback =
				procedure gelem_ed_id_element_disc_text(gelem_ed_structure);
			XmNactivateCallback =
				procedure gelem_ed_element_disc_text_CB(gelem_ed_structure);
			XmNlosingFocusCallback =
				procedure gelem_ed_element_disc_text_CB(gelem_ed_structure);
			};
		};
	gelem_ed_circle_disc_entry: XmForm
		{
		controls
			{
			XmLabelGadget gelem_ed_circle_disc_label;
			XmTextField gelem_ed_circle_disc_text;
			};
		};
	gelem_ed_circle_disc_label: XmLabelGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Circle discretization:");
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNfontList = normal_font;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNuserData = gelem_ed_structure;
			};
		};
	gelem_ed_circle_disc_text: XmTextField
		{
		arguments
			{
!      XmNcolumns = 8;
			XmNvalue = "";
			XmNmarginHeight = 2;
			XmNmarginWidth = 2;
			XmNfontList = normal_font;
			XmNleftAttachment = XmATTACH_WIDGET;
			XmNleftWidget = gelem_ed_circle_disc_label;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNuserData = gelem_ed_structure;
			};
		callbacks
			{
			MrmNcreateCallback =
				procedure gelem_ed_id_circle_disc_text(gelem_ed_structure);
			XmNactivateCallback =
				procedure gelem_ed_circle_disc_text_CB(gelem_ed_structure);
			XmNlosingFocusCallback =
				procedure gelem_ed_circle_disc_text_CB(gelem_ed_structure);
			};
		};
	gelem_ed_native_disc_entry: XmRowColumn
    {
		arguments
			{
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNspacing = 0;
			XmNorientation = XmHORIZONTAL;
			XmNpacking = XmPACK_TIGHT;
			};
    controls
      {
      XmToggleButtonGadget gelem_ed_native_disc_btn;
      XmForm gelem_ed_native_disc_form;
      };
    };
	gelem_ed_native_disc_btn: XmToggleButtonGadget
		{
		arguments
			{
			XmNlabelString = compound_string("Native discretization field:");
			XmNalignment = XmALIGNMENT_BEGINNING;
			XmNfontList = normal_font;
			};
		callbacks
			{
			MrmNcreateCallback =
				procedure gelem_ed_id_native_disc_btn(gelem_ed_structure);
      XmNvalueChangedCallback = procedure
				gelem_ed_native_disc_btn_CB(gelem_ed_structure);
			};
		};
	gelem_ed_native_disc_form: XmForm
		{
		callbacks
			{
			MrmNcreateCallback =
				procedure gelem_ed_id_native_disc_form(gelem_ed_structure);
			};
		};
!*******************************************************************************
	gelem_ed_settings_type_form: XmForm
		{
		arguments
			{
			XmNmarginHeight = 0;
			XmNmarginWidth = 0;
			XmNleftOffset = 2;
			XmNtopOffset = 2;
			XmNbottomOffset = 2;
!			XmNrightOffset = 2;
			XmNleftAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			};
		callbacks
			{
			MrmNcreateCallback = procedure
				gelem_ed_id_settings_type_form(gelem_ed_structure);
			};
		};
	gelem_ed_add_btn: XmPushButtonGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_NONE;
			XmNrightAttachment = XmATTACH_WIDGET;
			XmNrightWidget = gelem_ed_delete_btn;
			XmNtopAttachment = XmATTACH_FORM;
			XmNlabelString = compound_string("Add");
			XmNfontList = normal_font;
			};
		callbacks
			{
			MrmNcreateCallback = procedure gelem_ed_id_add_btn(gelem_ed_structure);
			XmNactivateCallback = procedure gelem_ed_add_btn_CB(gelem_ed_structure);
			};
		};
	gelem_ed_delete_btn: XmPushButtonGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_NONE;
			XmNrightAttachment = XmATTACH_WIDGET;
			XmNrightWidget = gelem_ed_up_btn;
			XmNtopAttachment = XmATTACH_FORM;
			XmNlabelString = compound_string("Del");
			XmNfontList = normal_font;
			};
		callbacks
			{
			MrmNcreateCallback = procedure gelem_ed_id_delete_btn(gelem_ed_structure);
			XmNactivateCallback =
				procedure gelem_ed_delete_btn_CB(gelem_ed_structure);
			};
		};
	gelem_ed_up_btn: XmPushButtonGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_NONE;
			XmNrightAttachment = XmATTACH_WIDGET;
			XmNrightWidget = gelem_ed_down_btn;
			XmNtopAttachment = XmATTACH_FORM;
			XmNlabelString =compound_string("Up");
			XmNfontList = normal_font;
			};
		callbacks
			{
			MrmNcreateCallback = procedure gelem_ed_id_up_btn(gelem_ed_structure);
			XmNactivateCallback = procedure gelem_ed_up_btn_CB(gelem_ed_structure);
			};
		};
	gelem_ed_down_btn: XmPushButtonGadget
		{
		arguments
			{
			XmNleftAttachment = XmATTACH_NONE;
			XmNtopAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNlabelString =compound_string("Dn");
			XmNfontList = normal_font;
			};
		callbacks
			{
			MrmNcreateCallback = procedure gelem_ed_id_down_btn(gelem_ed_structure);
			XmNactivateCallback = procedure gelem_ed_down_btn_CB(gelem_ed_structure);
			};
		};
!*******************************************************************************
end module;
