!*******************************************************************************
! FILE : material_editor_d.uil
!
! LAST MODIFIED : 12 August 2002
!
! DESCRIPTION :
! The widgets for the material_editor_d material_editor_d widget.
!===============================================================================
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is cmgui part of cmiss.
 *
 * The Initial Developer of the Original Code is
 * Auckland Uniservices Ltd, Auckland, New Zealand.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
module material_editor_dialog
	version = 'v1.0'

procedure
	mat_editor_d_identify_button    (integer);
	mat_editor_d_control_CB          (integer);

value
	sash_width : 50;
	shadow_size        : 2;
	form_space_out    :  2;
	form_space_in      :  4;
	mat_editor_d_3d_space  :  3;
	mat_editor_d_3d_height  :  200;

value
	mat_editor_d_font              : font_table(font('-*-HELVETICA-MEDIUM-R-*--*-80-*-*-*-*-ISO8859-1'));
	mat_editor_d_font_large        : font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
	mat_editor_d_font_bold        : font_table(font('-*-HELVETICA-BOLD-R-*--*-80-*-*-*-*-ISO8859-1'));

identifier
	!The gap between widgets
	widget_spacing;
	!Pointer to data specific to this instance of the mat_editor_d widget
	mat_editor_d_structure;
	!value identifier
	mat_editor_d_select_form_ID;
	mat_editor_d_editor_form_ID;
	mat_editor_d_ok_ID;
	mat_editor_d_apply_ID;
	mat_editor_d_revert_ID;
	mat_editor_d_cancel_ID;

! The mat_editor_d widget
object
	mat_editor_dialog_widget: XmForm
	{
		arguments
			{
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_FORM;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = mat_editor_d_structure;
			};
		controls
			{
			XmPanedWindow mat_editor_main_pw;
			XmRowColumn mat_editor_d_control;
			};
		};
	mat_editor_main_pw: XmPanedWindow
		{
		arguments
			{
			XmNsashWidth = sash_width;
			XmNborderWidth = 0;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_WIDGET;
			XmNbottomWidget = XmRowColumn mat_editor_d_control;
			XmNuserData = mat_editor_d_structure;
			};
		controls
			{
			XmForm mat_editor_d_select;
			XmForm mat_editor_d_editor;
			};
		};
	mat_editor_d_select: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNuserData = mat_editor_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure mat_editor_d_identify_button(mat_editor_d_select_form_ID);
			};
		};
	mat_editor_d_editor: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNuserData = mat_editor_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure mat_editor_d_identify_button(mat_editor_d_editor_form_ID);
			};
		};
!**************************************************************************************
	mat_editor_d_control: XmRowColumn
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNpacking = XmPACK_COLUMN;
			XmNorientation = XmHORIZONTAL;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = 0;
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = 0;
			XmNtopAttachment = XmATTACH_NONE;
			XmNtopOffset = 0;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = 0;
			XmNuserData = mat_editor_d_structure;
			};
		controls
			{
			XmPushButtonGadget mat_editor_d_control_ok;
			XmPushButtonGadget mat_editor_d_control_apply;
			XmPushButtonGadget mat_editor_d_control_revert;
			XmPushButtonGadget mat_editor_d_control_cancel;
			};
		};
	mat_editor_d_control_ok: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("OK");
			XmNuserData = mat_editor_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure mat_editor_d_identify_button(mat_editor_d_ok_ID);
			XmNactivateCallback = procedure mat_editor_d_control_CB(mat_editor_d_ok_ID);
			};
		};
	mat_editor_d_control_apply: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Apply");
			XmNuserData = mat_editor_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback = procedure mat_editor_d_identify_button(mat_editor_d_apply_ID);
			XmNactivateCallback = procedure mat_editor_d_control_CB(mat_editor_d_apply_ID);
			};
		};
	mat_editor_d_control_revert: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Revert");
			XmNuserData = mat_editor_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback =
				procedure mat_editor_d_identify_button(mat_editor_d_revert_ID);
			XmNactivateCallback =
				procedure mat_editor_d_control_CB(mat_editor_d_revert_ID);
			};
		};
	mat_editor_d_control_cancel: XmPushButtonGadget
		{
		arguments
			{
			XmNlabelString =
			compound_string("Cancel");
			XmNuserData = mat_editor_d_structure;
			};
		callbacks
			{
			MrmNcreateCallback =
				procedure mat_editor_d_identify_button(mat_editor_d_cancel_ID);
			XmNactivateCallback =
				procedure mat_editor_d_control_CB(mat_editor_d_cancel_ID);
			};
		};
end module;
!**************************************************************************************
