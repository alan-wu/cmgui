!*******************************************************************************
! FILE : parameter_dialog.uil
!
! LAST MODIFIED : 25 February 1999
!
! DESCRIPTION :
! The widgets/gadgets for the parameter dialog.
!===============================================================================
module Parameter_Dialog
	names = case_sensitive

procedure
	identify_parameter_rowcol;
	ok_button_callback;
	apply_button_callback;
	reset_button_callback;
	cancel_button_callback;
	help_button_callback;

identifier
	cell_component_structure;
	window_width;
	window_height;
	dialog_title;
! Standard CMGUI values
	button_font;
	heading_font;

value
	sash_width : 50;
	small_widget_spacing : 1;
	large_widget_spacing : 4;
	max_pane_size : 200;
	min_pane_size : 50;
	visible_items : 15;

object
	parameter_dialog: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNdefaultPosition = false;
			XmNresizePolicy = XmRESIZE_ANY;
			XmNdialogTitle = dialog_title;
			};
		controls
			{
			XmScrolledWindow parameter_window;
			XmForm button_form;
			};
		};
	parameter_window: XmScrolledWindow
		{
		arguments
			{
			XmNwidth = window_width;
			XmNheight = window_height;
			XmNtopOffset = small_widget_spacing;
			XmNtopAttachment = XmATTACH_FORM;
			XmNleftOffset = small_widget_spacing;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightOffset = small_widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNbottomOffset = small_widget_spacing;
			XmNbottomAttachment = XmATTACH_WIDGET;
			XmNbottomWidget = button_form;
			XmNscrollBarDisplayPolicy = XmSTATIC;
			XmNworkWindow = XmRowColumn parameter_rowcol;
			XmNscrollingPolicy = XmAUTOMATIC;
			};
		controls
			{
			XmRowColumn parameter_rowcol;
			};
		};
	parameter_rowcol: XmRowColumn
		{
		arguments
			{
			XmNentryAlignment = XmALIGNMENT_BEGINNING;
			XmNpacking = XmPACK_TIGHT;
			XmNorientation = XmVERTICAL;
			XmNnumColumns = 1;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_parameter_rowcol(
					cell_component_structure);
				};
			};
		};
	button_form: XmForm
		{
		arguments
			{
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = small_widget_spacing;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = small_widget_spacing;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = small_widget_spacing;
			XmNfractionBase = 16;
			};
		controls
			{
			XmPushButton ok_button;
			XmPushButton apply_button;
			XmPushButton reset_button;
			XmPushButton cancel_button;
			XmPushButton help_button;
			};
		};
	ok_button: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("OK");
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNleftAttachment = XmATTACH_POSITION;
			XmNleftPosition = 1;
			XmNrightAttachment = XmATTACH_POSITION;
			XmNrightPosition = 3;
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				ok_button_callback(cell_component_structure);
				};
			};
		};
	apply_button: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Apply");
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNleftAttachment = XmATTACH_POSITION;
			XmNleftPosition = 4;
			XmNrightAttachment = XmATTACH_POSITION;
			XmNrightPosition = 6;
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				apply_button_callback(cell_component_structure);
				};
			};
		};
	reset_button: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Reset");
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNleftAttachment = XmATTACH_POSITION;
			XmNleftPosition = 7;
			XmNrightAttachment = XmATTACH_POSITION;
			XmNrightPosition = 9;
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				reset_button_callback(cell_component_structure);
				};
			};
		};
	cancel_button: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Cancel");
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNleftAttachment = XmATTACH_POSITION;
			XmNleftPosition = 10;
			XmNrightAttachment = XmATTACH_POSITION;
			XmNrightPosition = 12;
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				cancel_button_callback(
					cell_component_structure);
				};
			};
		};
	help_button: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Help");
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNleftAttachment = XmATTACH_POSITION;
			XmNleftPosition = 13;
			XmNrightAttachment = XmATTACH_POSITION;
			XmNrightPosition = 15;
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				help_button_callback(cell_component_structure);
				};
			};
		};
end module;
