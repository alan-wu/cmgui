!*******************************************************************************
! FILE : export_control_curves_dialog.uil
!
! LAST MODIFIED : 29 September 1999
!
! DESCRIPTION :
! The widgets/gadgets for the export control curves dialog.
!===============================================================================
module Export_Dialog
	names = case_sensitive

procedure
	identify_variables_rowcol;
	identify_file_label;
	browse_callback;
	ok_button_callback;
	cancel_button_callback;

identifier
	cell_window_structure;
	window_width;
	window_height;
	default_file_name;
! Standard CMGUI values
	button_font;
	heading_font;

value
	sash_width : 50;
	small_widget_spacing : 1;
	large_widget_spacing : 4;
	max_pane_size : 200;
	min_pane_size : 50;
	visible_items : 15;

object
	export_control_curves_dialog: XmForm
		{
		arguments
			{
			XmNborderWidth = 0;
			XmNdefaultPosition = false;
			XmNresizePolicy = XmRESIZE_ANY;
			XmNdialogTitle = compound_string("Export control curves..");
			};
		controls
			{
			XmScrolledWindow export_window;
			XmForm button_form;
			};
		};
	export_window: XmScrolledWindow
		{
		arguments
			{
			XmNwidth = window_width;
			XmNheight = window_height;
			XmNtopOffset = small_widget_spacing;
			XmNtopAttachment = XmATTACH_FORM;
			XmNleftOffset = small_widget_spacing;
			XmNleftAttachment = XmATTACH_FORM;
			XmNrightOffset = small_widget_spacing;
			XmNrightAttachment = XmATTACH_FORM;
			XmNbottomOffset = small_widget_spacing;
			XmNbottomAttachment = XmATTACH_WIDGET;
			XmNbottomWidget = button_form;
			XmNscrollBarDisplayPolicy = XmSTATIC;
			XmNworkWindow = XmRowColumn export_rowcol;
			XmNscrollingPolicy = XmAUTOMATIC;
			};
		controls
			{
			XmRowColumn export_rowcol;
			};
		};
	export_rowcol: XmRowColumn
		{
		arguments
			{
			XmNentryAlignment = XmALIGNMENT_BEGINNING;
			XmNpacking = XmPACK_TIGHT;
			XmNorientation = XmVERTICAL;
			XmNnumColumns = 1;
			};
		controls
			{
			XmLabelGadget export_label;
			XmRowColumn variables_rowcol;
			XmRowColumn file_rowcol;
			};
		};
	export_label: XmLabelGadget
		{
		arguments
			{
			XmNlabelString = compound_string(
				"Choose the control curve(s) to export and the iptime file name");
			XmNfontList = heading_font;
			};
		};
	variables_rowcol: XmRowColumn
		{
		arguments
			{
			XmNentryAlignment = XmALIGNMENT_BEGINNING;
			XmNpacking = XmPACK_COLUMN;
			XmNorientation = XmVERTICAL;
			XmNnumColumns = 3;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_variables_rowcol(
					cell_window_structure);
				};
			};
		};
	file_rowcol: XmRowColumn
		{
		arguments
			{
			XmNentryAlignment = XmALIGNMENT_BEGINNING;
			XmNpacking = XmPACK_TIGHT;
			XmNorientation = XmHORIZONTAL;
			XmNnumColumns = 1;
			};
		controls
			{
			XmLabelGadget file_label1;
			XmLabelGadget file_label2;
			XmPushButton file_button;
			};
		};
	file_label1: XmLabelGadget
		{
		arguments
			{
			XmNlabelString = compound_string("iptime file: ");
			XmNfontList = heading_font;
			};
		};
	file_label2: XmLabelGadget
		{
		arguments
			{
			XmNlabelString = default_file_name;
			};
		callbacks
			{
			MrmNcreateCallback = procedures
				{
				identify_file_label(
					cell_window_structure);
				};
			};
		};
	file_button: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Browse...");
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				browse_callback(cell_window_structure);
				};
			};
		};
	button_form: XmForm
		{
		arguments
			{
			XmNrightAttachment = XmATTACH_FORM;
			XmNrightOffset = small_widget_spacing;
			XmNleftAttachment = XmATTACH_FORM;
			XmNleftOffset = small_widget_spacing;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNbottomOffset = small_widget_spacing;
			XmNfractionBase = 13;
			};
		controls
			{
			XmPushButton ok_button;
			XmPushButton cancel_button;
			};
		};
	ok_button: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("OK");
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNleftAttachment = XmATTACH_POSITION;
			XmNleftPosition = 1;
			XmNrightAttachment = XmATTACH_POSITION;
			XmNrightPosition = 5;
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				ok_button_callback(cell_window_structure);
				};
			};
		};
	cancel_button: XmPushButton
		{
		arguments
			{
			XmNlabelString = compound_string("Cancel");
			XmNtopAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNleftAttachment = XmATTACH_POSITION;
			XmNleftPosition = 7;
			XmNrightAttachment = XmATTACH_POSITION;
			XmNrightPosition = 11;
			XmNfontList = button_font;
			};
		callbacks
			{
			XmNactivateCallback = procedures
				{
				cancel_button_callback(cell_window_structure);
				};
			};
		};
end module;
