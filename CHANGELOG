# **************************************************************************
# FILE : CHANGELOG
#
# LAST MODIFIED : 20 Dec 2007
# ==========================================================================

This software is the cmgui part of CMISS.
It is released under the Mozilla Public License v1.1

Further information, help pages, a tracker and a wiki is available at 
http://www.cmiss.org/cmgui/

25 June 2008
API changes:
cmiss_scene_viewer.h
Cmiss_scene_viewer_get_frame_pixels now takes a 
   enum Cmiss_field_image_storage_pixel_format storage
   rather than a Texture_format enumerator.
cmiss_field_image.h New interface.

v2.5
17 Dec 2007

Third release of cmgui-wx.

Fixes:
Fixed user interface resizing issue.
Fixed a number of memoryleak.
Fixed a number of bugs.

Added interface components:
Element point viewer, Spectrum editor, Time editor, Material editor.

Added functions:
Time dependent transformation using quaternion.
Write out a total comfile.
Save all (reproduce the exnode, exelem and com file).
List all (List of commands used to construct the current model).
A number of image filters.
The ability to specify a sequence of iso values with a number, first and last value.
Added a new parameter for scaling the lit volume control.

Others:
cmgui-wx will use the best graphics settings available.
Offscreen buffering of cmgui-wx.
Enables order independent transparency in win32.

v2.4
11 May 2007
Releasing wx version.
Lots of new ITK filters.
Add support for a Graphics_library_tentative_check_extension which is true until we are sure whether
 or not an extension works.  This can be used for commands, which may be called before OpenGL is 
 initialised but we would like them to fail if they aren't working after it has been initialised.
Graphics_library_check_extension should be tested before actually using any extension, it will be 
 false unless we know the extension really works.  By now the display should have been initialised.
Use this new tentative check for bump_mapping and colour_lookup_spectra in materials.
Update perl modules to work with CMGUI without global variables.
Add image_resample computed field to commands.
No longer need to specify_width, specify_height, specify_depth or texture coordinate when working 
 using evaluate_image, the default values are retrieved from the source field.
Respect clear colour setting on spectrum when requesting rgb value.
Add support for bzip memory streams.
Each graphics window has its own interactive tools and settings of different interactive tools can now
 be triggered using commands and apply to all current graphics windows.
Add gfx define font to allow font objects to be created and most
 importantly to allow the default font to be redefined.
List the total number when nodes or elements are listed with gfx list node.
Allow the font to be specified when creating a colour_bar.
Allow a colour bar to be created for a specific data component.
Cmgui-wx now remember the directory where you previously open the file from.
Add a spectrum_settings that uses computed_fields to calculate the colour tranformation.
Add Option_table_add_help and try this function with the compose computed field.
Fix a bug passing the array of variables for matches and tidy up the regular expressions.
Fix a memory leak with the swizzle string for the material dependent texture program.
Node viewer now allows user to show variables from all fields at the same time.

v2.3.3
18 December 2006
Shifted to externally visible subversion server.
Added Cmiss_scene_viewer_set_depth_of_field and Cmiss_scene_viewer_get_depth_of_field.
Add Cmiss_scene_viewer_set_background_texture_info.
Fix bug calling get_FE_element_dimension when there is no element.
Fix bug in derivative computed field.
Stop segfault if source field not specified for derivative computed field.
Add a natural logarithm computed field "log".
Registered command for threshold filter computed field
Changes for initial support for WX_USER_INTERFACE and conversion of files to C++.
Enable element_tool and element_point_tool without dialog in all versions.

v2.3.2
5 October 2006
Added colour_lookup_spectrums to materials for doing colour space transformations
in the graphics hardware.

v2.3.1
30 August 2006
Started adding in ITK.

v2.3.0
29 August 2006
Changed internal structure of Computed_fields to use a C++ class rather than 
imitating this in C with function pointers.  Reduced the number of virtual methods by
consolidating the set/get functions with a generic location rather than separate
functions for nodes and elements.
Removed legacy image processing computed fields as we plan to replace them with ITK.
Fix some typos where data groups propogated incorrectly to the node parent.

v2.2.3
Enabled emoter to work without motif gui and enabled command only version for all non
motif builds.
Internally renamed Control_curve to just Curve.

v2.2.2
Support the OpenGL extension GL_ARB_texture_non_power_of_two and delay the 
expansion of textures that are not power of two till render time so it can be
avoided when not required.
Add support for conversion of lines (isolines) to node points in "gfx convert graphics".
Fix for reading in of wavefront obj files.

v2.2.1
Added node_offset/data_offset to gfx read nodes and data respectively.
Added node_offset, element_offset, face_offset and line offset to gfx read elements.
Added generate_faces_and_lines to gfx read elements.
Calculate winding order left or right handed at element centres for isosurfaces.
Added string_constant computed field.
Change equal_to computed_field so that it can operate on string values if either
field is defined but does not have numerical components.
Use CMISS_EXAMPLES environment variable to determine where the example tree is
rather than the Cmgui motif/X setting file.

v2.2
Removed computed variables by default.  To put it back in change USE_COMPUTED_VARIABLES to true in the makefile or by specifying it on the make command line.
Added new texture wrap modes edge_clamp_wrap, border_clamp_wrap and
mirrored_repeat_wrap from recent versions of OpenGL.
Fixed problems with methods not being fully set correctly for some computed fields.
Changes to support streamlines in tetrahedral meshes.
Changes to support isosurface generation in tetrahedral meshes.
Added code so that triangles for isosurfaces are generated with a consistent winding
order even in meshes which have inconsistent lefthanded and righthanded coordinate systems.
Fixed to grid point evaluation.
Allowing streamlines to be seeded from the nodes in a region.

v2.1.1
Large speed improvements for "gfx select nodes" and "gfx select elements".
Get regions to cache get_next_element_id so that it can be kept over multiple commands.
Image resampling improvements.
Started 'gfx export cm'
Reenabled automatic monochrome storage of images.
Added a weighting field to "gfx create snake".
Added a few more logical operators for less_than, greater_than and equal_to in computed fields. 

v2.1
Fix comfile script: cmgui-2.1/fixcom.pl
Added support for fitting multiple fields with "gfx create snake"
Began "gfx export cm" to write files for the old cm.
Added gfx convert elements (and changed the old gfx convert to be gfx convert graphics) which converts one form of elements to another. The only conversion I have implemented so far is the conversion of any 2D element surfaces to true toplevel 2D bicubic hermite elements. The cross-derivatives are not correct and need to think about how to fix this.

v2.0.2
Fixed gfx unselect data.
Fixed contour bands on iso_surfaces.
Fixed code for allocation of large arrays to use long ints where necessary.
Added code so that node changes propogate through a nodal_lookup computed field to a computed_field change.
Fixed a couple of bugs in cmgui with the scene editor and an iso_values list.
Many minor fixes of leaks or use of uninitialised values as detected by the new valgrind testing.

v2.0.1
Added glyph functionality to create graph axes
Added first pass at iso_surface_decimation.
Added a new coordinate system where objects are displayed relative to screen coordinates.

v2.0.0
First open source release.  License updated to Mozilla Public License.
Lots of tidying up.
Added README, INSTALL, RELEASE_NOTES and CHANGELOG.
